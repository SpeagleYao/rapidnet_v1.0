/* A RapidNet application. Generated by RapidNet compiler. */

#include "hyper-text-class.h"
#include <cstdlib>
#include "ns3/nstime.h"
#include "ns3/simulator.h"
#include "ns3/type-ids.h"
#include "ns3/rapidnet-types.h"
#include "ns3/rapidnet-utils.h"
#include "ns3/assignor.h"
#include "ns3/selector.h"
#include "ns3/rapidnet-functions.h"

using namespace std;
using namespace ns3;
using namespace ns3::rapidnet;
using namespace ns3::rapidnet::hypertextclass;

const string HyperTextClass::EPRETURN = "ePReturn";
const string HyperTextClass::EPROVQUERY = "eProvQuery";
const string HyperTextClass::ERRETURN = "eRReturn";
const string HyperTextClass::ERULEQUERY = "eRuleQuery";
const string HyperTextClass::ESHARESULT = "eshaResult";
const string HyperTextClass::ESHARESULTDELETE = "eshaResultDelete";
const string HyperTextClass::ESHARESULTTEMP = "eshaResultTemp";
const string HyperTextClass::ESHARESULTTEMPDELETE = "eshaResultTempDelete";
const string HyperTextClass::ETOPIC = "etopic";
const string HyperTextClass::ETOPICDELETE = "etopicDelete";
const string HyperTextClass::ETOPICTEMP = "etopicTemp";
const string HyperTextClass::ETOPICTEMPDELETE = "etopicTempDelete";
const string HyperTextClass::HASWORD = "hasword";
const string HyperTextClass::LINKS = "links";
const string HyperTextClass::PITERATE = "pIterate";
const string HyperTextClass::PQLIST = "pQList";
const string HyperTextClass::PRESULTTMP = "pResultTmp";
const string HyperTextClass::PRETURN = "pReturn";
const string HyperTextClass::PROV = "prov";
const string HyperTextClass::PROVQUERY = "provQuery";
const string HyperTextClass::RITERATE = "rIterate";
const string HyperTextClass::RQLIST = "rQList";
const string HyperTextClass::RRESULTTMP = "rResultTmp";
const string HyperTextClass::RRETURN = "rReturn";
const string HyperTextClass::RULEEXEC = "ruleExec";
const string HyperTextClass::RULEQUERY = "ruleQuery";
const string HyperTextClass::SHARESULT = "shaResult";
const string HyperTextClass::TOPIC = "topic";

NS_LOG_COMPONENT_DEFINE ("HyperTextClass");
NS_OBJECT_ENSURE_REGISTERED (HyperTextClass);

TypeId
HyperTextClass::GetTypeId (void)
{
  static TypeId tid = TypeId ("ns3::rapidnet::hypertextclass::HyperTextClass")
    .SetParent<RapidNetApplicationBase> ()
    .AddConstructor<HyperTextClass> ()
    ;
  return tid;
}

HyperTextClass::HyperTextClass()
{
  NS_LOG_FUNCTION_NOARGS ();
}

HyperTextClass::~HyperTextClass()
{
  NS_LOG_FUNCTION_NOARGS ();
}

void
HyperTextClass::DoDispose (void)
{
  NS_LOG_FUNCTION_NOARGS ();

  RapidNetApplicationBase::DoDispose ();
}

void
HyperTextClass::StartApplication (void)
{
  NS_LOG_FUNCTION_NOARGS ();

  RapidNetApplicationBase::StartApplication ();
  RAPIDNET_LOG_INFO("HyperTextClass Application Started");
}

void
HyperTextClass::StopApplication ()
{
  NS_LOG_FUNCTION_NOARGS ();

  RapidNetApplicationBase::StopApplication ();
  RAPIDNET_LOG_INFO("HyperTextClass Application Stopped");
}

void
HyperTextClass::InitDatabase ()
{
  //RapidNetApplicationBase::InitDatabase ();

  AddRelationWithKeys (HASWORD, attrdeflist (
    attrdef ("hasword_attr1", IPV4),
    attrdef ("hasword_attr2", STR),
    attrdef ("hasword_attr3", INT32)));

  AddRelationWithKeys (LINKS, attrdeflist (
    attrdef ("links_attr1", IPV4),
    attrdef ("links_attr2", INT32),
    attrdef ("links_attr3", INT32)));

  AddRelationWithKeys (PQLIST, attrdeflist (
    attrdef ("pQList_attr1", IPV4),
    attrdef ("pQList_attr2", ID)));

  AddRelationWithKeys (PRESULTTMP, attrdeflist (
    attrdef ("pResultTmp_attr1", IPV4),
    attrdef ("pResultTmp_attr2", ID)));

  AddRelationWithKeys (PROV, attrdeflist (
    attrdef ("prov_attr1", IPV4),
    attrdef ("prov_attr2", ID),
    attrdef ("prov_attr3", ID)));

  AddRelationWithKeys (RQLIST, attrdeflist (
    attrdef ("rQList_attr1", IPV4),
    attrdef ("rQList_attr2", ID)));

  AddRelationWithKeys (RRESULTTMP, attrdeflist (
    attrdef ("rResultTmp_attr1", IPV4),
    attrdef ("rResultTmp_attr2", ID)));

  AddRelationWithKeys (RULEEXEC, attrdeflist (
    attrdef ("ruleExec_attr1", IPV4),
    attrdef ("ruleExec_attr2", ID)));

  AddRelationWithKeys (SHARESULT, attrdeflist (
    attrdef ("shaResult_attr1", IPV4),
    attrdef ("shaResult_attr2", ID),
    attrdef ("shaResult_attr3", STR)));

  AddRelationWithKeys (TOPIC, attrdeflist (
    attrdef ("topic_attr1", IPV4),
    attrdef ("topic_attr2", STR),
    attrdef ("topic_attr3", INT32)));

}

void
HyperTextClass::DemuxRecv (Ptr<Tuple> tuple)
{
  RapidNetApplicationBase::DemuxRecv (tuple);

  if (IsInsertEvent (tuple, LINKS))
    {
      Prov_rl_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, LINKS))
    {
      Prov_rl_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, TOPIC))
    {
      Prov_rl_1Eca3Ins (tuple);
    }
  if (IsDeleteEvent (tuple, TOPIC))
    {
      Prov_rl_1Eca3Del (tuple);
    }
  if (IsRecvEvent (tuple, ETOPICTEMP))
    {
      Prov_rl_2_ecaAdd (tuple);
    }
  if (IsRecvEvent (tuple, ETOPICTEMPDELETE))
    {
      Prov_rl_2_ecaDel (tuple);
    }
  if (IsRecvEvent (tuple, ETOPICTEMP))
    {
      Prov_rl_3_ecaAdd (tuple);
    }
  if (IsRecvEvent (tuple, ETOPICTEMPDELETE))
    {
      Prov_rl_3_ecaDel (tuple);
    }
  if (IsRecvEvent (tuple, ETOPIC))
    {
      Prov_rl_4_ecaAdd (tuple);
    }
  if (IsRecvEvent (tuple, ETOPICDELETE))
    {
      Prov_rl_4_ecaDel (tuple);
    }
  if (IsRecvEvent (tuple, ETOPIC))
    {
      Prov_rl_5_ecaAdd (tuple);
    }
  if (IsRecvEvent (tuple, ETOPICDELETE))
    {
      Prov_rl_5_ecaDel (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r0_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r0_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r1_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r1_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r2_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r2_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r3_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r3_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r4_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r4_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r5_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r5_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r6_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r6_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r7_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r7_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r8_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r8_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r9_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r9_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r10_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r10_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r11_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r11_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r12_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r12_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r13_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r13_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r14_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r14_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r15_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r15_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r16_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r16_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r17_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r17_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r18_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r18_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r19_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r19_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r20_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r20_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r21_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r21_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r22_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r22_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r23_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r23_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r24_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r24_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r25_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r25_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r26_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r26_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r27_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r27_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r28_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r28_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r29_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r29_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r30_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r30_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r31_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r31_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r32_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r32_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r33_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r33_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r34_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r34_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r35_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r35_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r36_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r36_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r37_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r37_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r38_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r38_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r39_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r39_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r40_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r40_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r41_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r41_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r42_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r42_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r43_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r43_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r44_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r44_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r45_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r45_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r46_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r46_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r47_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r47_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r48_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r48_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r49_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r49_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r50_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r50_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r51_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r51_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r52_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r52_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r53_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r53_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r54_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r54_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r55_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r55_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r56_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r56_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r57_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r57_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r58_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r58_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r59_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r59_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r60_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r60_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r61_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r61_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r62_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r62_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r63_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r63_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r64_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r64_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r65_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r65_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r66_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r66_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r67_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r67_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r68_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r68_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r69_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r69_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r70_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r70_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r71_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r71_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r72_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r72_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r73_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r73_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r74_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r74_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r75_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r75_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r76_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r76_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r77_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r77_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r78_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r78_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r79_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r79_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r80_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r80_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r81_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r81_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r82_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r82_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r83_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r83_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r84_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r84_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r85_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r85_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r86_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r86_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r87_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r87_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r88_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r88_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r89_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r89_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r90_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r90_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r91_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r91_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r92_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r92_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r93_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r93_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r94_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r94_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r95_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r95_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r96_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r96_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r97_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r97_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r98_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r98_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r99_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r99_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r100_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r100_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r101_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r101_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r102_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r102_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r103_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r103_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r104_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r104_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r105_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r105_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r106_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r106_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r107_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r107_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r108_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r108_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r109_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r109_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r110_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r110_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r111_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r111_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r112_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r112_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r113_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r113_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r114_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r114_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r115_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r115_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r116_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r116_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r117_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r117_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r118_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r118_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r119_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r119_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r120_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r120_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r121_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r121_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r122_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r122_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r123_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r123_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r124_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r124_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r125_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r125_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r126_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r126_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r127_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r127_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r128_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r128_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r129_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r129_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r130_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r130_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r131_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r131_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r132_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r132_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r133_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r133_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r134_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r134_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r135_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r135_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r136_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r136_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r137_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r137_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r138_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r138_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r139_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r139_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r140_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r140_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r141_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r141_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r142_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r142_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r143_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r143_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r144_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r144_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r145_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r145_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r146_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r146_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r147_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r147_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r148_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r148_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r149_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r149_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r150_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r150_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r151_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r151_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r152_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r152_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r153_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r153_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r154_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r154_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r155_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r155_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r156_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r156_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r157_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r157_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r158_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r158_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r159_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r159_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r160_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r160_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r161_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r161_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r162_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r162_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r163_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r163_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r164_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r164_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r165_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r165_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r166_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r166_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r167_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r167_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r168_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r168_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r169_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r169_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r170_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r170_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r171_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r171_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r172_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r172_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r173_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r173_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r174_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r174_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r175_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r175_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r176_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r176_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r177_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r177_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r178_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r178_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r179_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r179_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r180_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r180_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r181_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r181_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r182_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r182_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r183_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r183_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r184_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r184_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r185_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r185_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r186_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r186_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r187_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r187_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r188_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r188_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r189_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r189_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r190_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r190_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r191_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r191_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r192_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r192_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r193_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r193_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r194_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r194_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r195_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r195_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r196_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r196_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r197_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r197_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r198_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r198_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r199_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r199_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r200_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r200_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r201_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r201_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r202_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r202_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r203_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r203_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r204_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r204_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r205_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r205_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r206_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r206_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r207_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r207_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r208_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r208_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r209_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r209_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r210_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r210_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r211_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r211_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r212_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r212_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r213_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r213_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r214_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r214_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r215_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r215_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r216_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r216_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r217_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r217_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r218_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r218_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r219_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r219_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r220_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r220_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r221_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r221_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r222_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r222_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r223_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r223_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r224_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r224_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r225_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r225_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r226_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r226_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r227_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r227_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r228_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r228_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r229_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r229_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r230_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r230_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r231_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r231_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r232_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r232_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r233_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r233_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r234_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r234_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r235_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r235_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r236_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r236_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r237_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r237_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r238_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r238_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r239_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r239_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r240_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r240_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r241_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r241_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r242_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r242_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r243_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r243_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r244_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r244_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r245_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r245_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r246_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r246_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r247_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r247_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r248_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r248_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r249_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r249_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r250_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r250_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r251_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r251_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r252_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r252_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r253_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r253_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r254_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r254_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r255_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r255_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r256_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r256_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r257_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r257_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r258_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r258_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r259_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r259_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r260_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r260_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r261_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r261_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r262_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r262_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r263_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r263_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r264_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r264_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r265_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r265_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r266_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r266_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r267_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r267_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r268_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r268_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r269_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r269_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r270_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r270_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r271_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r271_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r272_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r272_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r273_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r273_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r274_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r274_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r275_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r275_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r276_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r276_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r277_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r277_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r278_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r278_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r279_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r279_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r280_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r280_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r281_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r281_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r282_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r282_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r283_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r283_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r284_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r284_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r285_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r285_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r286_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r286_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r287_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r287_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r288_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r288_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r289_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r289_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r290_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r290_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r291_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r291_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r292_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r292_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r293_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r293_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r294_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r294_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r295_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r295_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r296_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r296_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r297_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r297_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r298_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r298_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r299_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r299_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r300_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r300_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r301_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r301_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r302_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r302_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r303_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r303_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r304_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r304_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r305_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r305_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r306_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r306_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r307_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r307_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r308_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r308_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r309_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r309_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r310_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r310_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r311_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r311_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r312_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r312_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r313_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r313_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r314_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r314_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r315_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r315_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r316_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r316_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r317_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r317_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r318_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r318_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r319_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r319_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r320_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r320_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r321_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r321_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r322_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r322_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r323_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r323_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r324_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r324_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r325_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r325_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r326_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r326_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r327_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r327_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r328_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r328_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r329_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r329_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r330_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r330_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r331_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r331_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r332_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r332_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r333_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r333_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r334_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r334_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r335_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r335_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r336_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r336_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r337_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r337_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r338_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r338_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r339_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r339_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r340_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r340_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r341_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r341_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r342_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r342_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r343_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r343_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r344_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r344_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r345_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r345_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r346_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r346_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r347_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r347_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r348_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r348_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r349_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r349_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r350_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r350_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r351_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r351_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r352_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r352_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r353_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r353_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r354_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r354_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r355_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r355_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r356_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r356_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r357_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r357_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r358_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r358_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r359_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r359_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r360_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r360_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r361_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r361_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r362_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r362_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r363_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r363_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r364_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r364_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r365_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r365_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r366_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r366_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r367_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r367_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r368_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r368_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r369_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r369_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r370_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r370_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r371_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r371_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r372_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r372_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r373_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r373_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r374_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r374_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r375_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r375_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r376_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r376_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r377_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r377_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r378_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r378_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r379_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r379_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r380_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r380_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r381_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r381_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r382_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r382_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r383_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r383_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r384_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r384_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r385_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r385_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r386_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r386_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r387_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r387_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r388_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r388_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r389_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r389_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r390_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r390_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r391_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r391_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r392_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r392_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r393_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r393_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r394_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r394_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r395_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r395_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r396_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r396_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r397_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r397_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r398_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r398_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r399_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r399_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r400_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r400_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r401_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r401_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r402_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r402_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r403_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r403_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r404_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r404_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r405_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r405_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r406_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r406_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r407_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r407_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r408_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r408_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r409_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r409_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r410_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r410_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r411_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r411_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r412_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r412_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r413_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r413_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r414_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r414_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r415_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r415_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r416_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r416_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r417_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r417_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r418_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r418_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r419_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r419_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r420_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r420_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r421_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r421_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r422_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r422_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r423_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r423_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r424_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r424_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r425_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r425_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r426_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r426_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r427_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r427_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r428_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r428_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r429_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r429_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r430_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r430_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r431_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r431_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r432_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r432_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r433_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r433_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r434_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r434_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r435_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r435_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r436_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r436_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r437_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r437_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r438_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r438_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r439_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r439_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r440_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r440_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r441_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r441_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r442_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r442_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r443_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r443_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r444_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r444_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r445_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r445_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r446_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r446_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r447_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r447_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r448_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r448_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r449_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r449_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r450_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r450_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r451_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r451_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r452_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r452_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r453_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r453_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r454_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r454_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r455_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r455_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r456_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r456_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r457_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r457_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r458_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r458_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r459_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r459_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r460_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r460_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r461_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r461_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r462_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r462_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r463_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r463_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r464_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r464_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r465_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r465_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r466_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r466_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r467_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r467_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r468_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r468_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r469_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r469_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r470_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r470_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r471_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r471_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r472_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r472_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r473_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r473_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r474_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r474_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r475_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r475_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r476_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r476_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r477_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r477_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r478_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r478_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r479_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r479_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r480_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r480_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r481_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r481_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r482_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r482_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r483_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r483_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r484_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r484_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r485_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r485_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r486_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r486_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r487_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r487_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r488_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r488_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r489_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r489_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r490_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r490_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r491_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r491_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r492_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r492_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r493_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r493_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r494_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r494_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r495_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r495_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r496_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r496_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r497_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r497_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r498_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r498_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_r499_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_r499_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, TOPIC))
    {
      Prov_rs1_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, TOPIC))
    {
      Prov_rs1_1Eca0Del (tuple);
    }
  if (IsRecvEvent (tuple, ESHARESULTTEMP))
    {
      Prov_rs1_2_ecaAdd (tuple);
    }
  if (IsRecvEvent (tuple, ESHARESULTTEMPDELETE))
    {
      Prov_rs1_2_ecaDel (tuple);
    }
  if (IsRecvEvent (tuple, ESHARESULTTEMP))
    {
      Prov_rs1_3_ecaAdd (tuple);
    }
  if (IsRecvEvent (tuple, ESHARESULTTEMPDELETE))
    {
      Prov_rs1_3_ecaDel (tuple);
    }
  if (IsRecvEvent (tuple, ESHARESULT))
    {
      Prov_rs1_4_ecaAdd (tuple);
    }
  if (IsRecvEvent (tuple, ESHARESULTDELETE))
    {
      Prov_rs1_4_ecaDel (tuple);
    }
  if (IsRecvEvent (tuple, ESHARESULT))
    {
      Prov_rs1_5_ecaAdd (tuple);
    }
  if (IsRecvEvent (tuple, ESHARESULTDELETE))
    {
      Prov_rs1_5_ecaDel (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_rs2_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_rs2_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, LINKS))
    {
      Prov_rs3_1Eca0Ins (tuple);
    }
  if (IsDeleteEvent (tuple, LINKS))
    {
      Prov_rs3_1Eca0Del (tuple);
    }
  if (IsInsertEvent (tuple, HASWORD))
    {
      Prov_edb_1Eca1Ins (tuple);
    }
  if (IsDeleteEvent (tuple, HASWORD))
    {
      Prov_edb_1Eca1Del (tuple);
    }
  if (IsInsertEvent (tuple, LINKS))
    {
      Prov_edb_2Eca1Ins (tuple);
    }
  if (IsDeleteEvent (tuple, LINKS))
    {
      Prov_edb_2Eca1Del (tuple);
    }
  if (IsRecvEvent (tuple, PROVQUERY))
    {
      Edb1_eca (tuple);
    }
  if (IsRecvEvent (tuple, PROVQUERY))
    {
      Idb1a_eca (tuple);
    }
  if (IsRecvEvent (tuple, PROVQUERY))
    {
      Idb1b_eca (tuple);
    }
  if (IsRecvEvent (tuple, PROVQUERY))
    {
      Idb2_eca (tuple);
    }
  if (IsRecvEvent (tuple, PROVQUERY))
    {
      Idb3_eca (tuple);
    }
  if (IsRecvEvent (tuple, PITERATE))
    {
      Idb4_eca (tuple);
    }
  if (IsRecvEvent (tuple, PITERATE))
    {
      Idb5_eca (tuple);
    }
  if (IsRecvEvent (tuple, ERULEQUERY))
    {
      Idb6_eca (tuple);
    }
  if (IsRecvEvent (tuple, RRETURN))
    {
      Idb7_eca (tuple);
    }
  if (IsInsertEvent (tuple, PRESULTTMP))
    {
      Idb8Eca0Ins (tuple);
    }
  if (IsInsertEvent (tuple, PQLIST))
    {
      Idb8Eca1Ins (tuple);
    }
  if (IsRecvEvent (tuple, EPRETURN))
    {
      Idb9a_eca (tuple);
    }
  if (IsRecvEvent (tuple, RULEQUERY))
    {
      Rv1_eca (tuple);
    }
  if (IsRecvEvent (tuple, RULEQUERY))
    {
      Rv2_eca (tuple);
    }
  if (IsRecvEvent (tuple, RULEQUERY))
    {
      Rv3_eca (tuple);
    }
  if (IsRecvEvent (tuple, RITERATE))
    {
      Rv4_eca (tuple);
    }
  if (IsRecvEvent (tuple, RITERATE))
    {
      Rv5_eca (tuple);
    }
  if (IsRecvEvent (tuple, EPROVQUERY))
    {
      Rv6_eca (tuple);
    }
  if (IsRecvEvent (tuple, PRETURN))
    {
      Rv7_eca (tuple);
    }
  if (IsInsertEvent (tuple, RRESULTTMP))
    {
      Rv8Eca0Ins (tuple);
    }
  if (IsInsertEvent (tuple, RQLIST))
    {
      Rv8Eca1Ins (tuple);
    }
  if (IsRecvEvent (tuple, ERRETURN))
    {
      Rv9_eca (tuple);
    }
}

void
HyperTextClass::Prov_rl_1Eca0Ins (Ptr<Tuple> links)
{
  RAPIDNET_LOG_INFO ("Prov_rl_1Eca0Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (TOPIC)->Join (
    links,
    strlist ("topic_attr1", "topic_attr3"),
    strlist ("links_attr1", "links_attr3"));

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("PID2",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("topic_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("List2",
    FAppend::New (
      VarExpr::New ("PID2"))));

  result->Assign (Assignor::New ("List",
    FConcat::New (
      VarExpr::New ("List"),
      VarExpr::New ("List2"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("links_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rl"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_NEQ,
      VarExpr::New ("links_attr2"),
      VarExpr::New ("links_attr3"))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "topic_attr2",
      "links_attr2",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rl_1Eca0Del (Ptr<Tuple> links)
{
  RAPIDNET_LOG_INFO ("Prov_rl_1Eca0Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (TOPIC)->Join (
    links,
    strlist ("topic_attr1", "topic_attr3"),
    strlist ("links_attr1", "links_attr3"));

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("PID2",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("topic_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("List2",
    FAppend::New (
      VarExpr::New ("PID2"))));

  result->Assign (Assignor::New ("List",
    FConcat::New (
      VarExpr::New ("List"),
      VarExpr::New ("List2"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("links_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rl"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_NEQ,
      VarExpr::New ("links_attr2"),
      VarExpr::New ("links_attr3"))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "topic_attr2",
      "links_attr2",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rl_1Eca3Ins (Ptr<Tuple> topic)
{
  RAPIDNET_LOG_INFO ("Prov_rl_1Eca3Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (LINKS)->Join (
    topic,
    strlist ("links_attr1", "links_attr3"),
    strlist ("topic_attr1", "topic_attr3"));

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("topic_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("topic_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("PID2",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("topic_attr1")),
          VarExpr::New ("topic_attr2")),
        VarExpr::New ("topic_attr3")))));

  result->Assign (Assignor::New ("List2",
    FAppend::New (
      VarExpr::New ("PID2"))));

  result->Assign (Assignor::New ("List",
    FConcat::New (
      VarExpr::New ("List"),
      VarExpr::New ("List2"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("topic_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rl"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_NEQ,
      VarExpr::New ("links_attr2"),
      VarExpr::New ("topic_attr3"))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "topic_attr2",
      "links_attr2",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rl_1Eca3Del (Ptr<Tuple> topic)
{
  RAPIDNET_LOG_INFO ("Prov_rl_1Eca3Del triggered");

  Ptr<RelationBase> result;

  result = GetRelation (LINKS)->Join (
    topic,
    strlist ("links_attr1", "links_attr3"),
    strlist ("topic_attr1", "topic_attr3"));

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("topic_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("topic_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("PID2",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("topic_attr1")),
          VarExpr::New ("topic_attr2")),
        VarExpr::New ("topic_attr3")))));

  result->Assign (Assignor::New ("List2",
    FAppend::New (
      VarExpr::New ("PID2"))));

  result->Assign (Assignor::New ("List",
    FConcat::New (
      VarExpr::New ("List"),
      VarExpr::New ("List2"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("topic_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rl"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_NEQ,
      VarExpr::New ("links_attr2"),
      VarExpr::New ("topic_attr3"))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "topic_attr2",
      "links_attr2",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rl_2_ecaAdd (Ptr<Tuple> etopicTemp)
{
  RAPIDNET_LOG_INFO ("Prov_rl_2_ecaAdd triggered");

  Ptr<Tuple> result = etopicTemp;

  result = result->Project (
    RULEEXEC,
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8"),
    strlist ("ruleExec_attr1",
      "ruleExec_attr2",
      "ruleExec_attr3",
      "ruleExec_attr4",
      "ruleExec_attr5"));

  Insert (result);
}

void
HyperTextClass::Prov_rl_2_ecaDel (Ptr<Tuple> etopicTempDelete)
{
  RAPIDNET_LOG_INFO ("Prov_rl_2_ecaDel triggered");

  Ptr<Tuple> result = etopicTempDelete;

  result = result->Project (
    RULEEXEC,
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8"),
    strlist ("ruleExec_attr1",
      "ruleExec_attr2",
      "ruleExec_attr3",
      "ruleExec_attr4",
      "ruleExec_attr5"));

  Delete (result);
}

void
HyperTextClass::Prov_rl_3_ecaAdd (Ptr<Tuple> etopicTemp)
{
  RAPIDNET_LOG_INFO ("Prov_rl_3_ecaAdd triggered");

  Ptr<Tuple> result = etopicTemp;

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ETOPIC,
    strlist ("Local",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr1",
      "Local"),
    strlist ("etopic_attr1",
      "etopic_attr2",
      "etopic_attr3",
      "etopic_attr4",
      "etopic_attr5",
      "etopic_attr6",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rl_3_ecaDel (Ptr<Tuple> etopicTempDelete)
{
  RAPIDNET_LOG_INFO ("Prov_rl_3_ecaDel triggered");

  Ptr<Tuple> result = etopicTempDelete;

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ETOPICDELETE,
    strlist ("Local",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr1",
      "Local"),
    strlist ("etopicDelete_attr1",
      "etopicDelete_attr2",
      "etopicDelete_attr3",
      "etopicDelete_attr4",
      "etopicDelete_attr5",
      "etopicDelete_attr6",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rl_4_ecaAdd (Ptr<Tuple> etopic)
{
  RAPIDNET_LOG_INFO ("Prov_rl_4_ecaAdd triggered");

  Ptr<Tuple> result = etopic;

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    TOPIC,
    strlist ("Local",
      "etopic_attr2",
      "etopic_attr3"),
    strlist ("topic_attr1",
      "topic_attr2",
      "topic_attr3"));

  Insert (result);
}

void
HyperTextClass::Prov_rl_4_ecaDel (Ptr<Tuple> etopicDelete)
{
  RAPIDNET_LOG_INFO ("Prov_rl_4_ecaDel triggered");

  Ptr<Tuple> result = etopicDelete;

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    TOPIC,
    strlist ("Local",
      "etopicDelete_attr2",
      "etopicDelete_attr3"),
    strlist ("topic_attr1",
      "topic_attr2",
      "topic_attr3"));

  Delete (result);
}

void
HyperTextClass::Prov_rl_5_ecaAdd (Ptr<Tuple> etopic)
{
  RAPIDNET_LOG_INFO ("Prov_rl_5_ecaAdd triggered");

  Ptr<Tuple> result = etopic;

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("etopic_attr1")),
          VarExpr::New ("etopic_attr2")),
        VarExpr::New ("etopic_attr3")))));

  result->Assign (Assignor::New ("Score",
    ValueExpr::New (RealValue::New (-1))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    PROV,
    strlist ("Local",
      "VID",
      "etopic_attr4",
      "etopic_attr6",
      "Score"),
    strlist ("prov_attr1",
      "prov_attr2",
      "prov_attr3",
      "prov_attr4",
      "prov_attr5"));

  Insert (result);
}

void
HyperTextClass::Prov_rl_5_ecaDel (Ptr<Tuple> etopicDelete)
{
  RAPIDNET_LOG_INFO ("Prov_rl_5_ecaDel triggered");

  Ptr<Tuple> result = etopicDelete;

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("etopicDelete_attr1")),
          VarExpr::New ("etopicDelete_attr2")),
        VarExpr::New ("etopicDelete_attr3")))));

  result->Assign (Assignor::New ("Score",
    ValueExpr::New (RealValue::New (-1))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    PROV,
    strlist ("Local",
      "VID",
      "etopicDelete_attr4",
      "etopicDelete_attr6",
      "Score"),
    strlist ("prov_attr1",
      "prov_attr2",
      "prov_attr3",
      "prov_attr4",
      "prov_attr5"));

  Delete (result);
}

void
HyperTextClass::Prov_r0_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r0_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r0"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("bit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r0_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r0_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r0"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("bit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r1_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r1_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r1"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("effici")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r1_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r1_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r1"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("effici")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r2_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r2_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r2"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("compani")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r2_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r2_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r2"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("compani")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r3_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r3_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r3"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("express")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r3_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r3_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r3"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("express")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r4_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r4_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r4"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("log")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r4_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r4_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r4"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("log")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r5_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r5_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r5"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("programm")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r5_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r5_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r5"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("programm")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r6_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r6_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r6"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("buffer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r6_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r6_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r6"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("buffer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r7_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r7_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r7"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("techniqu")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r7_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r7_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r7"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("techniqu")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r8_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r8_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r8"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("finish")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r8_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r8_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r8"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("finish")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r9_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r9_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r9"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("devic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r9_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r9_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r9"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("devic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r10_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r10_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r10"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("type")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r10_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r10_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r10"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("type")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r11_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r11_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r11"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("architectur")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r11_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r11_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r11"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("architectur")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r12_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r12_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r12"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("august")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r12_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r12_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r12"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("august")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r13_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r13_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r13"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("high")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r13_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r13_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r13"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("high")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r14_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r14_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r14"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("locat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r14_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r14_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r14"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("locat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r15_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r15_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r15"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("make")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r15_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r15_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r15"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("make")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r16_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r16_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r16"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pass")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r16_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r16_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r16"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pass")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r17_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r17_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r17"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("collect")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r17_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r17_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r17"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("collect")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r18_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r18_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r18"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("devic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r18_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r18_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r18"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("devic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r19_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r19_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r19"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("server")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r19_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r19_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r19"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("server")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r20_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r20_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r20"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("great")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r20_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r20_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r20"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("great")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r21_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r21_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r21"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("order")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r21_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r21_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r21"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("order")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r22_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r22_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r22"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hardwar")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r22_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r22_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r22"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hardwar")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r23_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r23_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r23"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("graphic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r23_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r23_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r23"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("graphic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r24_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r24_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r24"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("result")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r24_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r24_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r24"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("result")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r25_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r25_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r25"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pp")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r25_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r25_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r25"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pp")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r26_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r26_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r26"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("investig")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r26_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r26_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r26"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("investig")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r27_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r27_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r27"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("count")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r27_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r27_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r27"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("count")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r28_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r28_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r28"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("gener")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r28_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r28_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r28"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("gener")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r29_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r29_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r29"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("layer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r29_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r29_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r29"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("layer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r30_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r30_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r30"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("homepag")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r30_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r30_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r30"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("homepag")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r31_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r31_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r31"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("digit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r31_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r31_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r31"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("digit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r32_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r32_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r32"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("copyright")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r32_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r32_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r32"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("copyright")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r33_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r33_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r33"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("summer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r33_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r33_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r33"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("summer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r34_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r34_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r34"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("nation")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r34_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r34_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r34"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("nation")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r35_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r35_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r35"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("respons")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r35_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r35_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r35"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("respons")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r36_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r36_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r36"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("thu")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r36_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r36_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r36"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("thu")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r37_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r37_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r37"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("review")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r37_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r37_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r37"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("review")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r38_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r38_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r38"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("translat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r38_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r38_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r38"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("translat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r39_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r39_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r39"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("region")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r39_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r39_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r39"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("region")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r40_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r40_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r40"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("discuss")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r40_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r40_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r40"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("discuss")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r41_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r41_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r41"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r41_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r41_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r41"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r42_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r42_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r42"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("institut")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r42_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r42_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r42"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("institut")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r43_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r43_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r43"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mathemat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r43_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r43_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r43"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mathemat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r44_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r44_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r44"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("techniqu")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r44_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r44_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r44"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("techniqu")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r45_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r45_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r45"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("quiz")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r45_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r45_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r45"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("quiz")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r46_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r46_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r46"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("school")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r46_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r46_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r46"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("school")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r47_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r47_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r47"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("neural")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r47_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r47_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r47"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("neural")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r48_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r48_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r48"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("space")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r48_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r48_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r48"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("space")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r49_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r49_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r49"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("page")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r49_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r49_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r49"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("page")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r50_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r50_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r50"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ncsa")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r50_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r50_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r50"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ncsa")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r51_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r51_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r51"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("format")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r51_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r51_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r51"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("format")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r52_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r52_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r52"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("jame")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r52_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r52_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r52"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("jame")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r53_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r53_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r53"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("small")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r53_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r53_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r53"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("small")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r54_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r54_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r54"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("track")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r54_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r54_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r54"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("track")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r55_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r55_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r55"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("user")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r55_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r55_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r55"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("user")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r56_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r56_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r56"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("end")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r56_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r56_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r56"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("end")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r57_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r57_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r57"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("connect")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r57_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r57_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r57"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("connect")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r58_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r58_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r58"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("seattl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r58_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r58_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r58"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("seattl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r59_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r59_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r59"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hw")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r59_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r59_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r59"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hw")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r60_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r60_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r60"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("guid")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r60_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r60_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r60"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("guid")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r61_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r61_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r61"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("storag")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r61_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r61_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r61"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("storag")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r62_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r62_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r62"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("proof")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r62_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r62_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r62"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("proof")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r63_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r63_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r63"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("don")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r63_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r63_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r63"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("don")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r64_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r64_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r64"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fault")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r64_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r64_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r64"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fault")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r65_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r65_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r65"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wait")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r65_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r65_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r65"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wait")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r66_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r66_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r66"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("order")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r66_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r66_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r66"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("order")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r67_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r67_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r67"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("provid")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r67_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r67_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r67"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("provid")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r68_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r68_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r68"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("switch")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r68_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r68_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r68"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("switch")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r69_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r69_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r69"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("string")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r69_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r69_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r69"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("string")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r70_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r70_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r70"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("knowledg")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r70_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r70_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r70"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("knowledg")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r71_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r71_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r71"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("current")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r71_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r71_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r71"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("current")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r72_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r72_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r72"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("august")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r72_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r72_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r72"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("august")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r73_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r73_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r73"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("compil")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r73_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r73_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r73"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("compil")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r74_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r74_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r74"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sampl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r74_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r74_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r74"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sampl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r75_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r75_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r75"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("meet")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r75_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r75_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r75"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("meet")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r76_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r76_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r76"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("dissert")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r76_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r76_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r76"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("dissert")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r77_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r77_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r77"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("dissert")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r77_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r77_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r77"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("dissert")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r78_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r78_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r78"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("dai")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r78_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r78_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r78"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("dai")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r79_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r79_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r79"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("refin")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r79_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r79_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r79"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("refin")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r80_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r80_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r80"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hardwar")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r80_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r80_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r80"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hardwar")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r81_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r81_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r81"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("step")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r81_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r81_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r81"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("step")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r82_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r82_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r82"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("path")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r82_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r82_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r82"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("path")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r83_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r83_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r83"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r83_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r83_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r83"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r84_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r84_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r84"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("issu")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r84_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r84_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r84"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("issu")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r85_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r85_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r85"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("specif")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r85_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r85_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r85"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("specif")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r86_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r86_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r86"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("tabl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r86_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r86_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r86"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("tabl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r87_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r87_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r87"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("break")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r87_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r87_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r87"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("break")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r88_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r88_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r88"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("maintain")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r88_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r88_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r88"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("maintain")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r89_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r89_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r89"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("local")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r89_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r89_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r89"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("local")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r90_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r90_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r90"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("introduct")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r90_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r90_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r90"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("introduct")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r91_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r91_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r91"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("method")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r91_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r91_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r91"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("method")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r92_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r92_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r92"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("structur")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r92_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r92_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r92"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("structur")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r93_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r93_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r93"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("exist")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r93_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r93_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r93"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("exist")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r94_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r94_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r94"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rate")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r94_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r94_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r94"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rate")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r95_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r95_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r95"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("effici")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r95_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r95_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r95"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("effici")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r96_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r96_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r96"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("public")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r96_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r96_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r96"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("public")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r97_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r97_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r97"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("argum")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r97_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r97_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r97"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("argum")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r98_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r98_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r98"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("introduct")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r98_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r98_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r98"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("introduct")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r99_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r99_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r99"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("differ")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r99_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r99_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r99"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("differ")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r100_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r100_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r100"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("art")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r100_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r100_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r100"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("art")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r101_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r101_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r101"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("email")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r101_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r101_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r101"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("email")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r102_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r102_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r102"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("charact")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r102_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r102_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r102"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("charact")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r103_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r103_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r103"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("emac")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r103_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r103_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r103"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("emac")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r104_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r104_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r104"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("movi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r104_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r104_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r104"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("movi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r105_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r105_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r105"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pointer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r105_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r105_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r105"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pointer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r106_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r106_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r106"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ieee")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r106_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r106_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r106"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ieee")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r107_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r107_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r107"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("provid")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r107_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r107_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r107"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("provid")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r108_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r108_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r108"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("independ")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r108_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r108_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r108"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("independ")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r109_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r109_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r109"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("educ")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r109_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r109_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r109"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("educ")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r110_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r110_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r110"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("statem")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r110_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r110_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r110"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("statem")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r111_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r111_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r111"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("algebra")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r111_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r111_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r111"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("algebra")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r112_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r112_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r112"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("apr")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r112_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r112_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r112"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("apr")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r113_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r113_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r113"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("semant")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r113_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r113_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r113"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("semant")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r114_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r114_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r114"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("algorithm")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r114_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r114_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r114"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("algorithm")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r115_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r115_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r115"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("obtain")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r115_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r115_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r115"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("obtain")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r116_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r116_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r116"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("buffer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r116_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r116_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r116"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("buffer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r117_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r117_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r117"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("manipul")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r117_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r117_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r117"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("manipul")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r118_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r118_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r118"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("propos")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r118_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r118_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r118"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("propos")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r119_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r119_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r119"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("aug")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r119_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r119_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r119"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("aug")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r120_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r120_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r120"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("partial")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r120_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r120_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r120"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("partial")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r121_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r121_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r121"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("institut")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r121_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r121_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r121"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("institut")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r122_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r122_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r122"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sundai")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r122_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r122_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r122"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sundai")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r123_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r123_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r123"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("particl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r123_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r123_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r123"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("particl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r124_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r124_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r124"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("basic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r124_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r124_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r124"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("basic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r125_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r125_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r125"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("equat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r125_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r125_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r125"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("equat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r126_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r126_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r126"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("proceed")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r126_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r126_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r126"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("proceed")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r127_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r127_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r127"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fax")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r127_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r127_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r127"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fax")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r128_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r128_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r128"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("utexa")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r128_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r128_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r128"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("utexa")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r129_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r129_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r129"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("begin")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r129_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r129_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r129"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("begin")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r130_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r130_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r130"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("thesi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r130_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r130_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r130"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("thesi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r131_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r131_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r131"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ithaca")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r131_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r131_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r131"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ithaca")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r132_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r132_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r132"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("grant")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r132_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r132_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r132"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("grant")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r133_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r133_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r133"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("queri")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r133_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r133_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r133"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("queri")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r134_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r134_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r134"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cpp")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r134_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r134_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r134"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cpp")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r135_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r135_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r135"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("decision")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r135_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r135_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r135"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("decision")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r136_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r136_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r136"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interest")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r136_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r136_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r136"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interest")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r137_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r137_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r137"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mathemat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r137_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r137_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r137"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mathemat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r138_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r138_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r138"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("appli")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r138_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r138_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r138"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("appli")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r139_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r139_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r139"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hand")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r139_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r139_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r139"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hand")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r140_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r140_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r140"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("main")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r140_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r140_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r140"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("main")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r141_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r141_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r141"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("book")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r141_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r141_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r141"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("book")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r142_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r142_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r142"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("enter")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r142_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r142_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r142"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("enter")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r143_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r143_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r143"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("flow")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r143_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r143_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r143"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("flow")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r144_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r144_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r144"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("regist")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r144_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r144_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r144"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("regist")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r145_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r145_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r145"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("accept")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r145_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r145_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r145"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("accept")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r146_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r146_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r146"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("data")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r146_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r146_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r146"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("data")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r147_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r147_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r147"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("calcul")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r147_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r147_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r147"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("calcul")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r148_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r148_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r148"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wisc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r148_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r148_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r148"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wisc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r149_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r149_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r149"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("network")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r149_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r149_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r149"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("network")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r150_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r150_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r150"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("statem")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r150_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r150_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r150"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("statem")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r151_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r151_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r151"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("michael")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r151_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r151_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r151"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("michael")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r152_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r152_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r152"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("copi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r152_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r152_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r152"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("copi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r153_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r153_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r153"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("packag")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r153_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r153_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r153"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("packag")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r154_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r154_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r154"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("background")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r154_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r154_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r154"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("background")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r155_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r155_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r155"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("distribut")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r155_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r155_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r155"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("distribut")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r156_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r156_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r156"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("import")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r156_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r156_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r156"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("import")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r157_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r157_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r157"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pictur")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r157_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r157_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r157"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pictur")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r158_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r158_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r158"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("log")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r158_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r158_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r158"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("log")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r159_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r159_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r159"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("window")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r159_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r159_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r159"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("window")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r160_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r160_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r160"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("instruct")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r160_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r160_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r160"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("instruct")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r161_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r161_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r161"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("symbol")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r161_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r161_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r161"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("symbol")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r162_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r162_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r162"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("compress")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r162_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r162_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r162"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("compress")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r163_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r163_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r163"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("york")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r163_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r163_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r163"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("york")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r164_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r164_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r164"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("studi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r164_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r164_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r164"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("studi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r165_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r165_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r165"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("contact")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r165_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r165_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r165"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("contact")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r166_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r166_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r166"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("present")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r166_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r166_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r166"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("present")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r167_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r167_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r167"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cycl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r167_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r167_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r167"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cycl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r168_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r168_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r168"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("proof")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r168_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r168_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r168"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("proof")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r169_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r169_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r169"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("discuss")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r169_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r169_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r169"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("discuss")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r170_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r170_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r170"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("machin")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r170_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r170_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r170"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("machin")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r171_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r171_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r171"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("match")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r171_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r171_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r171"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("match")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r172_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r172_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r172"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("product")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r172_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r172_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r172"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("product")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r173_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r173_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r173"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("digit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r173_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r173_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r173"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("digit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r174_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r174_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r174"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("network")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r174_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r174_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r174"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("network")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r175_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r175_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r175"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fall")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r175_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r175_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r175"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fall")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r176_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r176_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r176"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("begin")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r176_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r176_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r176"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("begin")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r177_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r177_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r177"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("goal")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r177_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r177_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r177"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("goal")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r178_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r178_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r178"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("circuit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r178_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r178_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r178"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("circuit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r179_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r179_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r179"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("queue")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r179_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r179_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r179"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("queue")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r180_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r180_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r180"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("size")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r180_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r180_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r180"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("size")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r181_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r181_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r181"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("storag")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r181_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r181_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r181"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("storag")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r182_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r182_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r182"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("index")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r182_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r182_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r182"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("index")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r183_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r183_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r183"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("differ")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r183_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r183_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r183"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("differ")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r184_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r184_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r184"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("job")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r184_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r184_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r184"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("job")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r185_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r185_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r185"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pp")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r185_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r185_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r185"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pp")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r186_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r186_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r186"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("industri")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r186_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r186_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r186"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("industri")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r187_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r187_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r187"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("order")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r187_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r187_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r187"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("order")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r188_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r188_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r188"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("learn")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r188_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r188_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r188"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("learn")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r189_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r189_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r189"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("combin")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r189_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r189_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r189"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("combin")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r190_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r190_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r190"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("board")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r190_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r190_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r190"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("board")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r191_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r191_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r191"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("match")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r191_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r191_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r191"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("match")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r192_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r192_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r192"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("schedul")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r192_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r192_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r192"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("schedul")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r193_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r193_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r193"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("futur")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r193_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r193_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r193"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("futur")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r194_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r194_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r194"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("set")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r194_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r194_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r194"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("set")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r195_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r195_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r195"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interpret")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r195_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r195_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r195"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interpret")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r196_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r196_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r196"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("comput")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r196_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r196_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r196"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("comput")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r197_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r197_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r197"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("servic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r197_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r197_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r197"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("servic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r198_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r198_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r198"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("step")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r198_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r198_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r198"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("step")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r199_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r199_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r199"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("move")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r199_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r199_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r199"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("move")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r200_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r200_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r200"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("equat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r200_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r200_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r200"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("equat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r201_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r201_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r201"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("file")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r201_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r201_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r201"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("file")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r202_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r202_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r202"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("game")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r202_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r202_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r202"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("game")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r203_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r203_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r203"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("modifi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r203_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r203_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r203"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("modifi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r204_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r204_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r204"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interest")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r204_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r204_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r204"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interest")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r205_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r205_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r205"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("annual")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r205_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r205_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r205"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("annual")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r206_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r206_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r206"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("thesi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r206_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r206_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r206"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("thesi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r207_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r207_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r207"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("behavior")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r207_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r207_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r207"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("behavior")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r208_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r208_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r208"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("principl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r208_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r208_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r208"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("principl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r209_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r209_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r209"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("committe")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r209_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r209_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r209"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("committe")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r210_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r210_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r210"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("end")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r210_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r210_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r210"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("end")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r211_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r211_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r211"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("free")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r211_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r211_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r211"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("free")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r212_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r212_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r212"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("suggest")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r212_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r212_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r212"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("suggest")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r213_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r213_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r213"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("stack")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r213_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r213_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r213"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("stack")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r214_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r214_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r214"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("natur")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r214_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r214_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r214"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("natur")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r215_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r215_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r215"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("grant")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r215_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r215_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r215"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("grant")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r216_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r216_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r216"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("anim")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r216_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r216_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r216"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("anim")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r217_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r217_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r217"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("side")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r217_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r217_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r217"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("side")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r218_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r218_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r218"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("friend")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r218_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r218_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r218"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("friend")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r219_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r219_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r219"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ncsa")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r219_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r219_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r219"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ncsa")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r220_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r220_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r220"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("resourc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r220_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r220_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r220"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("resourc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r221_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r221_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r221"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("written")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r221_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r221_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r221"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("written")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r222_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r222_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r222"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("output")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r222_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r222_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r222"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("output")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r223_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r223_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r223"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("similar")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r223_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r223_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r223"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("similar")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r224_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r224_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r224"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("contact")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r224_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r224_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r224"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("contact")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r225_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r225_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r225"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("dissert")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r225_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r225_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r225"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("dissert")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r226_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r226_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r226"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("argum")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r226_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r226_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r226"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("argum")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r227_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r227_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r227"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("articl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r227_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r227_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r227"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("articl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r228_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r228_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r228"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("homework")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r228_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r228_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r228"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("homework")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r229_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r229_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r229"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("true")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r229_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r229_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r229"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("true")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r230_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r230_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r230"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("condition")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r230_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r230_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r230"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("condition")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r231_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r231_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r231"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interfac")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r231_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r231_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r231"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interfac")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r232_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r232_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r232"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("job")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r232_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r232_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r232"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("job")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r233_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r233_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r233"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wisc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r233_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r233_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r233"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wisc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r234_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r234_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r234"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("plan")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r234_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r234_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r234"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("plan")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r235_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r235_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r235"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("handl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r235_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r235_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r235"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("handl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r236_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r236_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r236"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("subject")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r236_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r236_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r236"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("subject")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r237_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r237_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r237"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ai")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r237_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r237_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r237"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ai")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r238_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r238_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r238"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("danc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r238_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r238_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r238"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("danc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r239_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r239_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r239"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("separ")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r239_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r239_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r239"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("separ")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r240_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r240_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r240"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("consult")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r240_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r240_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r240"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("consult")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r241_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r241_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r241"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("studi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r241_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r241_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r241"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("studi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r242_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r242_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r242"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("quot")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r242_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r242_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r242"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("quot")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r243_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r243_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r243"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("offic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r243_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r243_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r243"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("offic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r244_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r244_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r244"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("reduc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r244_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r244_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r244"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("reduc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r245_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r245_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r245"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("idea")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r245_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r245_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r245"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("idea")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r246_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r246_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r246"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("person")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r246_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r246_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r246"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("person")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r247_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r247_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r247"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("signal")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r247_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r247_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r247"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("signal")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r248_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r248_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r248"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("semest")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r248_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r248_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r248"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("semest")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r249_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r249_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r249"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("bug")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r249_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r249_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r249"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("bug")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r250_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r250_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r250"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("workshop")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r250_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r250_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r250"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("workshop")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r251_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r251_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r251"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("finish")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r251_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r251_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r251"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("finish")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r252_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r252_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r252"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("featur")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r252_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r252_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r252"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("featur")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r253_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r253_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r253"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("workshop")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r253_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r253_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r253"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("workshop")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r254_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r254_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r254"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("van")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r254_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r254_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r254"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("van")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r255_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r255_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r255"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("oper")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r255_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r255_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r255"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("oper")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r256_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r256_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r256"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("process")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r256_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r256_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r256"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("process")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r257_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r257_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r257"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("approxim")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r257_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r257_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r257"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("approxim")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r258_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r258_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r258"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("programm")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r258_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r258_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r258"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("programm")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r259_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r259_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r259"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("level")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r259_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r259_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r259"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("level")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r260_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r260_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r260"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("group")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r260_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r260_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r260"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("group")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r261_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r261_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r261"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("theori")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r261_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r261_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r261"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("theori")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r262_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r262_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r262"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("modul")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r262_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r262_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r262"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("modul")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r263_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r263_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r263"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("memori")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r263_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r263_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r263"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("memori")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r264_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r264_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r264"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("electron")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r264_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r264_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r264"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("electron")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r265_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r265_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r265"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("print")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r265_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r265_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r265"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("print")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r266_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r266_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r266"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("color")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r266_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r266_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r266"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("color")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r267_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r267_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r267"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("intern")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r267_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r267_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r267"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("intern")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r268_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r268_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r268"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("failur")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r268_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r268_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r268"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("failur")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r269_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r269_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r269"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("handl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r269_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r269_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r269"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("handl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r270_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r270_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r270"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("statem")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r270_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r270_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r270"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("statem")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r271_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r271_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r271"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pictur")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r271_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r271_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r271"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pictur")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r272_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r272_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r272"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("common")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r272_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r272_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r272"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("common")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r273_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r273_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r273"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("answer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r273_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r273_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r273"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("answer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r274_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r274_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r274"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("addition")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r274_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r274_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r274"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("addition")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r275_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r275_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r275"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("york")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r275_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r275_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r275"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("york")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r276_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r276_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r276"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("term")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r276_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r276_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r276"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("term")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r277_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r277_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r277"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("compil")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r277_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r277_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r277"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("compil")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r278_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r278_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r278"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("layer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r278_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r278_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r278"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("layer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r279_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r279_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r279"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("languag")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r279_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r279_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r279"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("languag")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r280_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r280_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r280"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("utexa")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r280_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r280_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r280"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("utexa")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r281_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r281_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r281"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("austin")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r281_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r281_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r281"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("austin")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r282_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r282_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r282"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("multi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r282_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r282_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r282"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("multi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r283_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r283_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r283"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("increas")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r283_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r283_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r283"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("increas")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r284_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r284_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r284"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("qualit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r284_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r284_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r284"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("qualit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r285_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r285_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r285"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("doubl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r285_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r285_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r285"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("doubl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r286_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r286_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r286"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("street")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r286_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r286_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r286"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("street")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r287_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r287_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r287"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("short")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r287_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r287_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r287"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("short")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r288_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r288_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r288"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sep")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r288_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r288_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r288"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sep")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r289_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r289_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r289"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sequenc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r289_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r289_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r289"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sequenc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r290_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r290_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r290"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("robert")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r290_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r290_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r290"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("robert")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r291_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r291_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r291"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("product")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r291_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r291_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r291"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("product")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r292_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r292_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r292"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("iter")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r292_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r292_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r292"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("iter")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r293_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r293_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r293"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("node")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r293_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r293_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r293"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("node")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r294_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r294_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r294"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("start")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r294_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r294_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r294"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("start")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r295_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r295_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r295"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("version")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r295_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r295_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r295"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("version")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r296_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r296_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r296"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("commun")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r296_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r296_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r296"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("commun")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r297_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r297_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r297"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("press")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r297_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r297_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r297"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("press")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r298_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r298_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r298"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("make")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r298_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r298_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r298"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("make")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r299_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r299_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r299"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("west")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r299_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r299_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r299"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("west")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r300_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r300_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r300"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("proc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r300_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r300_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r300"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("proc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r301_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r301_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r301"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("miss")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r301_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r301_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r301"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("miss")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r302_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r302_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r302"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("kernel")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r302_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r302_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r302"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("kernel")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r303_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r303_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r303"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("block")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r303_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r303_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r303"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("block")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r304_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r304_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r304"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("result")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r304_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r304_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r304"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("result")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r305_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r305_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r305"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("netscap")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r305_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r305_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r305"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("netscap")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r306_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r306_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r306"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("state")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r306_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r306_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r306"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("state")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r307_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r307_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r307"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("updat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r307_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r307_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r307"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("updat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r308_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r308_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r308"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cpp")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r308_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r308_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r308"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cpp")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r309_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r309_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r309"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("refin")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r309_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r309_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r309"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("refin")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r310_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r310_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r310"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("advanc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r310_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r310_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r310"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("advanc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r311_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r311_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r311"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("statem")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r311_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r311_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r311"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("statem")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r312_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r312_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r312"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("column")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r312_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r312_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r312"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("column")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r313_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r313_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r313"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("regist")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r313_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r313_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r313"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("regist")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r314_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r314_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r314"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rang")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r314_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r314_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r314"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rang")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r315_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r315_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r315"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("postscript")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r315_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r315_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r315"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("postscript")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r316_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r316_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r316"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("content")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r316_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r316_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r316"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("content")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r317_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r317_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r317"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("char")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r317_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r317_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r317"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("char")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r318_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r318_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r318"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("past")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r318_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r318_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r318"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("past")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r319_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r319_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r319"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("variabl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r319_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r319_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r319"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("variabl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r320_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r320_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r320"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("standard")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r320_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r320_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r320"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("standard")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r321_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r321_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r321"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("long")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r321_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r321_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r321"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("long")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r322_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r322_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r322"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rate")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r322_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r322_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r322"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rate")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r323_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r323_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r323"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("thread")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r323_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r323_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r323"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("thread")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r324_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r324_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r324"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("life")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r324_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r324_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r324"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("life")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r325_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r325_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r325"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("danc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r325_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r325_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r325"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("danc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r326_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r326_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r326"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("laboratori")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r326_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r326_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r326"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("laboratori")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r327_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r327_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r327"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("discuss")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r327_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r327_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r327"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("discuss")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r328_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r328_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r328"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("credit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r328_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r328_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r328"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("credit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r329_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r329_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r329"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("import")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r329_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r329_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r329"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("import")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r330_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r330_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r330"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("present")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r330_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r330_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r330"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("present")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r331_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r331_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r331"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("danc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r331_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r331_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r331"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("danc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r332_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r332_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r332"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("account")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r332_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r332_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r332"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("account")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r333_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r333_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r333"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("home")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r333_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r333_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r333"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("home")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r334_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r334_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r334"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("processor")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r334_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r334_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r334"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("processor")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r335_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r335_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r335"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("peopl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r335_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r335_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r335"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("peopl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r336_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r336_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r336"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("import")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r336_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r336_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r336"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("import")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r337_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r337_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r337"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("nbsp")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r337_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r337_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r337"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("nbsp")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r338_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r338_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r338"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("differ")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r338_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r338_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r338"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("differ")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r339_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r339_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r339"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("member")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r339_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r339_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r339"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("member")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r340_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r340_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r340"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mail")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r340_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r340_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r340"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mail")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r341_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r341_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r341"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("seattl")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r341_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r341_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r341"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("seattl")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r342_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r342_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r342"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("vector")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r342_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r342_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r342"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("vector")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r343_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r343_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r343"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("summari")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r343_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r343_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r343"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("summari")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r344_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r344_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r344"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("lab")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r344_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r344_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r344"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("lab")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r345_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r345_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r345"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("menu")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r345_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r345_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r345"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("menu")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r346_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r346_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r346"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("repres")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r346_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r346_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r346"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("repres")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r347_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r347_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r347"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("tuesdai")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r347_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r347_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r347"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("tuesdai")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r348_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r348_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r348"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("movi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r348_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r348_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r348"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("movi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r349_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r349_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r349"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("input")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r349_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r349_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r349"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("input")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r350_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r350_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r350"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("world")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r350_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r350_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r350"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("world")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r351_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r351_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r351"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("updat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r351_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r351_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r351"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("updat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r352_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r352_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r352"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("finish")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r352_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r352_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r352"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("finish")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r353_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r353_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r353"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fall")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r353_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r353_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r353"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fall")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r354_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r354_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r354"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("induct")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r354_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r354_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r354"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("induct")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r355_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r355_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r355"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("apr")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r355_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r355_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r355"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("apr")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r356_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r356_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r356"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("directori")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r356_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r356_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r356"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("directori")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r357_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r357_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r357"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cluster")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r357_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r357_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r357"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cluster")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r358_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r358_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r358"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("prove")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r358_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r358_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r358"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("prove")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r359_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r359_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r359"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("activ")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r359_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r359_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r359"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("activ")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r360_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r360_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r360"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("apr")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r360_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r360_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r360"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("apr")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r361_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r361_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r361"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("audio")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r361_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r361_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r361"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("audio")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r362_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r362_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r362"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("leav")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r362_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r362_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r362"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("leav")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r363_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r363_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r363"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("screen")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r363_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r363_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r363"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("screen")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r364_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r364_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r364"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("menu")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r364_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r364_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r364"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("menu")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r365_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r365_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r365"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("physic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r365_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r365_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r365"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("physic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r366_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r366_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r366"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ident")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r366_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r366_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r366"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ident")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r367_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r367_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r367"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("partial")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r367_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r367_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r367"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("partial")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r368_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r368_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r368"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("signal")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r368_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r368_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r368"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("signal")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r369_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r369_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r369"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("secur")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r369_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r369_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r369"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("secur")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r370_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r370_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r370"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("reason")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r370_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r370_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r370"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("reason")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r371_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r371_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r371"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("number")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r371_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r371_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r371"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("number")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r372_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r372_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r372"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hand")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r372_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r372_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r372"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("hand")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r373_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r373_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r373"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("parallel")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r373_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r373_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r373"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("parallel")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r374_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r374_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r374"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("creat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r374_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r374_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r374"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("creat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r375_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r375_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r375"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("machin")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r375_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r375_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r375"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("machin")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r376_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r376_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r376"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("societi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r376_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r376_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r376"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("societi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r377_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r377_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r377"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("break")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r377_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r377_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r377"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("break")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r378_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r378_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r378"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("connect")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r378_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r378_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r378"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("connect")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r379_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r379_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r379"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("schedul")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r379_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r379_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r379"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("schedul")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r380_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r380_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r380"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("format")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r380_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r380_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r380"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("format")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r381_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r381_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r381"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("map")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r381_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r381_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r381"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("map")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r382_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r382_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r382"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("link")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r382_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r382_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r382"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("link")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r383_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r383_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r383"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("program")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r383_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r383_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r383"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("program")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r384_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r384_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r384"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("year")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r384_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r384_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r384"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("year")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r385_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r385_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r385"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wait")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r385_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r385_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r385"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wait")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r386_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r386_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r386"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("shore")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r386_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r386_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r386"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("shore")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r387_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r387_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r387"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("html")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r387_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r387_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r387"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("html")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r388_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r388_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r388"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("call")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r388_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r388_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r388"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("call")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r389_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r389_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r389"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("submit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r389_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r389_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r389"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("submit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r390_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r390_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r390"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("develop")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r390_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r390_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r390"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("develop")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r391_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r391_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r391"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("travel")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r391_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r391_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r391"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("travel")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r392_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r392_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r392"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("automat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r392_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r392_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r392"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("automat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r393_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r393_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r393"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("send")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r393_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r393_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r393"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("send")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r394_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r394_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r394"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("improv")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r394_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r394_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r394"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("improv")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r395_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r395_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r395"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("memori")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r395_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r395_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r395"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("memori")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r396_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r396_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r396"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("creat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r396_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r396_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r396"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("creat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r397_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r397_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r397"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("manual")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r397_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r397_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r397"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("manual")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r398_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r398_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r398"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("acm")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r398_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r398_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r398"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("acm")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r399_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r399_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r399"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("talk")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r399_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r399_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r399"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("talk")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r400_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r400_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r400"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("depend")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r400_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r400_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r400"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("depend")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r401_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r401_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r401"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("oper")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r401_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r401_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r401"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("oper")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r402_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r402_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r402"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("step")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r402_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r402_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r402"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("step")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r403_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r403_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r403"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("approxim")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r403_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r403_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r403"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("approxim")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r404_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r404_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r404"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("devic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r404_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r404_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r404"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("devic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r405_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r405_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r405"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("read")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r405_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r405_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r405"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("read")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r406_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r406_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r406"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("homework")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r406_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r406_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r406"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("homework")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r407_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r407_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r407"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("repres")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r407_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r407_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r407"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("repres")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r408_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r408_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r408"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("improv")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r408_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r408_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r408"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("improv")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r409_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r409_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r409"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("involv")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r409_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r409_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r409"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("involv")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r410_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r410_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r410"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("remov")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r410_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r410_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r410"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("remov")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r411_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r411_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r411"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("flow")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r411_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r411_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r411"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("flow")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r412_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r412_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r412"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("todai")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r412_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r412_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r412"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("todai")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r413_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r413_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r413"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pointer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r413_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r413_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r413"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("pointer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r414_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r414_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r414"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("commun")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r414_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r414_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r414"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("commun")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r415_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r415_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r415"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("publish")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r415_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r415_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r415"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("publish")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r416_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r416_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r416"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("electr")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r416_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r416_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r416"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("electr")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r417_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r417_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r417"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("electron")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r417_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r417_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r417"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("electron")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r418_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r418_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r418"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("handout")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r418_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r418_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r418"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("handout")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r419_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r419_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r419"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("recent")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r419_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r419_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r419"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("recent")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r420_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r420_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r420"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("letter")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r420_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r420_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r420"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("letter")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r421_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r421_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r421"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("india")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r421_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r421_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r421"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("india")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r422_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r422_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r422"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("main")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r422_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r422_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r422"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("main")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r423_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r423_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r423"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("oct")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r423_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r423_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r423"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("oct")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r424_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r424_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r424"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("master")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r424_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r424_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r424"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("master")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r425_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r425_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r425"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("nov")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r425_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r425_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r425"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("nov")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r426_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r426_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r426"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("world")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r426_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r426_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r426"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("world")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r427_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r427_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r427"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("vector")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r427_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r427_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r427"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("vector")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r428_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r428_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r428"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ca")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r428_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r428_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r428"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ca")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r429_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r429_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r429"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("geometri")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r429_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r429_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r429"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("geometri")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r430_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r430_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r430"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("circuit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r430_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r430_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r430"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("circuit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r431_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r431_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r431"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("const")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r431_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r431_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r431"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("const")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r432_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r432_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r432"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("java")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r432_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r432_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r432"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("java")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r433_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r433_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r433"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("practic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r433_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r433_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r433"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("practic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r434_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r434_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r434"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("quiz")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r434_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r434_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r434"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("quiz")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r435_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r435_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r435"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("graphic")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r435_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r435_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r435"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("graphic")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r436_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r436_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r436"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("workstat")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r436_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r436_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r436"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("workstat")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r437_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r437_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r437"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("associ")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r437_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r437_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r437"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("associ")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r438_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r438_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r438"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("test")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r438_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r438_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r438"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("test")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r439_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r439_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r439"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r439_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r439_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r439"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r440_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r440_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r440"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("tree")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r440_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r440_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r440"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("tree")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r441_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r441_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r441"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cover")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r441_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r441_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r441"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cover")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r442_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r442_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r442"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("confer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r442_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r442_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r442"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("confer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r443_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r443_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r443"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("workshop")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r443_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r443_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r443"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("workshop")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r444_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r444_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r444"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("press")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r444_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r444_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r444"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("press")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r445_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r445_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r445"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("choos")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r445_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r445_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r445"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("choos")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r446_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r446_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r446"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rout")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r446_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r446_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r446"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rout")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r447_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r447_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r447"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wa")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r447_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r447_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r447"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("wa")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r448_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r448_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r448"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("robot")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r448_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r448_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r448"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("robot")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r449_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r449_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r449"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fax")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r449_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r449_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r449"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fax")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r450_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r450_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r450"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("displai")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r450_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r450_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r450"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("displai")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r451_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r451_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r451"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("confer")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r451_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r451_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r451"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("confer")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r452_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r452_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r452"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("valu")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r452_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r452_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r452"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("valu")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r453_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r453_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r453"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("void")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r453_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r453_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r453"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("void")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r454_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r454_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r454"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("http")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r454_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r454_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r454"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("http")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r455_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r455_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r455"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fortran")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r455_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r455_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r455"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fortran")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r456_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r456_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r456"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("appli")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r456_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r456_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r456"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("appli")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r457_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r457_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r457"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("low")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r457_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r457_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r457"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("low")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r458_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r458_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r458"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sp")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r458_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r458_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r458"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("sp")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r459_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r459_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r459"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("overview")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r459_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r459_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r459"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("overview")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r460_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r460_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r460"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rout")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r460_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r460_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r460"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("rout")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r461_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r461_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r461"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("receiv")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r461_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r461_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r461"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("receiv")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r462_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r462_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r462"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("result")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r462_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r462_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r462"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("result")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r463_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r463_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r463"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("india")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r463_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r463_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r463"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("india")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r464_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r464_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r464"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("model")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r464_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r464_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r464"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("model")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r465_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r465_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r465"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("start")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r465_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r465_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r465"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("start")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r466_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r466_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r466"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r466_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r466_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r466"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("cc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r467_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r467_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r467"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ta")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r467_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r467_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r467"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ta")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r468_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r468_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r468"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("const")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r468_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r468_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r468"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("const")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r469_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r469_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r469"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ftp")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r469_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r469_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r469"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("ftp")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r470_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r470_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r470"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fact")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r470_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r470_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r470"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("fact")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r471_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r471_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r471"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("return")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r471_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r471_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r471"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("return")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r472_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r472_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r472"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("make")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r472_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r472_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r472"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("make")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r473_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r473_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r473"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("april")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r473_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r473_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r473"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("april")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r474_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r474_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r474"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("quiz")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r474_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r474_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r474"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("quiz")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r475_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r475_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r475"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("long")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r475_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r475_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r475"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("long")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r476_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r476_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r476"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("usa")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r476_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r476_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r476"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("usa")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r477_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r477_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r477"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("imag")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r477_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r477_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r477"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("imag")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r478_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r478_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r478"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("represent")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r478_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r478_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r478"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("represent")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r479_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r479_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r479"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("nation")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r479_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r479_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r479"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("nation")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r480_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r480_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r480"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("enter")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r480_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r480_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r480"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("enter")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r481_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r481_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r481"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("organ")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r481_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r481_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Student"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r481"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("organ")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r482_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r482_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r482"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("identifi")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r482_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r482_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("ResearchProject"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r482"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("identifi")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r483_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r483_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r483"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("homepag")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r483_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r483_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r483"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("homepag")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r484_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r484_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r484"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("color")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r484_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r484_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r484"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("color")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r485_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r485_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r485"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("short")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r485_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r485_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r485"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("short")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r486_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r486_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r486"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("paper")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r486_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r486_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r486"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("paper")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r487_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r487_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r487"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mon")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r487_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r487_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r487"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("mon")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r488_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r488_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r488"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("binari")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r488_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r488_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r488"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("binari")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r489_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r489_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r489"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("view")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r489_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r489_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r489"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("view")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r490_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r490_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r490"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interfac")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r490_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r490_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r490"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("interfac")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r491_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r491_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r491"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("alloc")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r491_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r491_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Course"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r491"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("alloc")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r492_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r492_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r492"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("schedul")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r492_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r492_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r492"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("schedul")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r493_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r493_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r493"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("task")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r493_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r493_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r493"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("task")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r494_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r494_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r494"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("search")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r494_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r494_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r494"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("search")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r495_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r495_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r495"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("netscap")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r495_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r495_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r495"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("netscap")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r496_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r496_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r496"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("edit")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r496_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r496_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Person"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r496"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("edit")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r497_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r497_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r497"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("search")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r497_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r497_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Department"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r497"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("search")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r498_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r498_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r498"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("give")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r498_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r498_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Staff"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r498"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("give")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r499_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r499_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r499"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("number")))));

  result = result->Project (
    ETOPICTEMP,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTemp_attr1",
      "etopicTemp_attr2",
      "etopicTemp_attr3",
      "etopicTemp_attr4",
      "etopicTemp_attr5",
      "etopicTemp_attr6",
      "etopicTemp_attr7",
      "etopicTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_r499_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_r499_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("T",
    ValueExpr::New (StrValue::New ("Faculty"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("r499"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("hasword_attr2"),
      ValueExpr::New (StrValue::New ("number")))));

  result = result->Project (
    ETOPICTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "T",
      "hasword_attr3",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("etopicTempDelete_attr1",
      "etopicTempDelete_attr2",
      "etopicTempDelete_attr3",
      "etopicTempDelete_attr4",
      "etopicTempDelete_attr5",
      "etopicTempDelete_attr6",
      "etopicTempDelete_attr7",
      "etopicTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rs1_1Eca0Ins (Ptr<Tuple> topic)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_1Eca0Ins triggered");

  Ptr<Tuple> result = topic;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("topic_attr1")),
          VarExpr::New ("topic_attr2")),
        VarExpr::New ("topic_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("topic_attr1")),
          VarExpr::New ("topic_attr2")),
        VarExpr::New ("topic_attr3")))));

  result->Assign (Assignor::New ("Name",
    ValueExpr::New (StrValue::New ("topic"))));

  result->Assign (Assignor::New ("Content",
    Operation::New (RN_PLUS,
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            VarExpr::New ("Name"),
            ValueExpr::New (StrValue::New ("_"))),
          VarExpr::New ("topic_attr2")),
        ValueExpr::New (StrValue::New ("_"))),
      VarExpr::New ("topic_attr3"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("topic_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rs1"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ESHARESULTTEMP,
    strlist ("RLOC",
      "Local",
      "VID",
      "Content",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("eshaResultTemp_attr1",
      "eshaResultTemp_attr2",
      "eshaResultTemp_attr3",
      "eshaResultTemp_attr4",
      "eshaResultTemp_attr5",
      "eshaResultTemp_attr6",
      "eshaResultTemp_attr7",
      "eshaResultTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rs1_1Eca0Del (Ptr<Tuple> topic)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_1Eca0Del triggered");

  Ptr<Tuple> result = topic;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("topic_attr1")),
          VarExpr::New ("topic_attr2")),
        VarExpr::New ("topic_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("topic")),
            VarExpr::New ("topic_attr1")),
          VarExpr::New ("topic_attr2")),
        VarExpr::New ("topic_attr3")))));

  result->Assign (Assignor::New ("Name",
    ValueExpr::New (StrValue::New ("topic"))));

  result->Assign (Assignor::New ("Content",
    Operation::New (RN_PLUS,
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            VarExpr::New ("Name"),
            ValueExpr::New (StrValue::New ("_"))),
          VarExpr::New ("topic_attr2")),
        ValueExpr::New (StrValue::New ("_"))),
      VarExpr::New ("topic_attr3"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("topic_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rs1"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ESHARESULTTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "VID",
      "Content",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("eshaResultTempDelete_attr1",
      "eshaResultTempDelete_attr2",
      "eshaResultTempDelete_attr3",
      "eshaResultTempDelete_attr4",
      "eshaResultTempDelete_attr5",
      "eshaResultTempDelete_attr6",
      "eshaResultTempDelete_attr7",
      "eshaResultTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rs1_2_ecaAdd (Ptr<Tuple> eshaResultTemp)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_2_ecaAdd triggered");

  Ptr<Tuple> result = eshaResultTemp;

  result = result->Project (
    RULEEXEC,
    strlist ("eshaResultTemp_attr1",
      "eshaResultTemp_attr5",
      "eshaResultTemp_attr6",
      "eshaResultTemp_attr7",
      "eshaResultTemp_attr8"),
    strlist ("ruleExec_attr1",
      "ruleExec_attr2",
      "ruleExec_attr3",
      "ruleExec_attr4",
      "ruleExec_attr5"));

  Insert (result);
}

void
HyperTextClass::Prov_rs1_2_ecaDel (Ptr<Tuple> eshaResultTempDelete)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_2_ecaDel triggered");

  Ptr<Tuple> result = eshaResultTempDelete;

  result = result->Project (
    RULEEXEC,
    strlist ("eshaResultTempDelete_attr1",
      "eshaResultTempDelete_attr5",
      "eshaResultTempDelete_attr6",
      "eshaResultTempDelete_attr7",
      "eshaResultTempDelete_attr8"),
    strlist ("ruleExec_attr1",
      "ruleExec_attr2",
      "ruleExec_attr3",
      "ruleExec_attr4",
      "ruleExec_attr5"));

  Delete (result);
}

void
HyperTextClass::Prov_rs1_3_ecaAdd (Ptr<Tuple> eshaResultTemp)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_3_ecaAdd triggered");

  Ptr<Tuple> result = eshaResultTemp;

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ESHARESULT,
    strlist ("Local",
      "eshaResultTemp_attr3",
      "eshaResultTemp_attr4",
      "eshaResultTemp_attr5",
      "eshaResultTemp_attr6",
      "eshaResultTemp_attr1",
      "Local"),
    strlist ("eshaResult_attr1",
      "eshaResult_attr2",
      "eshaResult_attr3",
      "eshaResult_attr4",
      "eshaResult_attr5",
      "eshaResult_attr6",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rs1_3_ecaDel (Ptr<Tuple> eshaResultTempDelete)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_3_ecaDel triggered");

  Ptr<Tuple> result = eshaResultTempDelete;

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ESHARESULTDELETE,
    strlist ("Local",
      "eshaResultTempDelete_attr3",
      "eshaResultTempDelete_attr4",
      "eshaResultTempDelete_attr5",
      "eshaResultTempDelete_attr6",
      "eshaResultTempDelete_attr1",
      "Local"),
    strlist ("eshaResultDelete_attr1",
      "eshaResultDelete_attr2",
      "eshaResultDelete_attr3",
      "eshaResultDelete_attr4",
      "eshaResultDelete_attr5",
      "eshaResultDelete_attr6",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rs1_4_ecaAdd (Ptr<Tuple> eshaResult)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_4_ecaAdd triggered");

  Ptr<Tuple> result = eshaResult;

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    SHARESULT,
    strlist ("Local",
      "eshaResult_attr2",
      "eshaResult_attr3"),
    strlist ("shaResult_attr1",
      "shaResult_attr2",
      "shaResult_attr3"));

  Insert (result);
}

void
HyperTextClass::Prov_rs1_4_ecaDel (Ptr<Tuple> eshaResultDelete)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_4_ecaDel triggered");

  Ptr<Tuple> result = eshaResultDelete;

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    SHARESULT,
    strlist ("Local",
      "eshaResultDelete_attr2",
      "eshaResultDelete_attr3"),
    strlist ("shaResult_attr1",
      "shaResult_attr2",
      "shaResult_attr3"));

  Delete (result);
}

void
HyperTextClass::Prov_rs1_5_ecaAdd (Ptr<Tuple> eshaResult)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_5_ecaAdd triggered");

  Ptr<Tuple> result = eshaResult;

  result->Assign (Assignor::New ("eshaResult_attr2",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("shaResult")),
            VarExpr::New ("eshaResult_attr1")),
          VarExpr::New ("eshaResult_attr2")),
        VarExpr::New ("eshaResult_attr3")))));

  result->Assign (Assignor::New ("Score",
    ValueExpr::New (RealValue::New (-1))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    PROV,
    strlist ("Local",
      "eshaResult_attr2",
      "eshaResult_attr4",
      "eshaResult_attr6",
      "Score"),
    strlist ("prov_attr1",
      "prov_attr2",
      "prov_attr3",
      "prov_attr4",
      "prov_attr5"));

  Insert (result);
}

void
HyperTextClass::Prov_rs1_5_ecaDel (Ptr<Tuple> eshaResultDelete)
{
  RAPIDNET_LOG_INFO ("Prov_rs1_5_ecaDel triggered");

  Ptr<Tuple> result = eshaResultDelete;

  result->Assign (Assignor::New ("eshaResultDelete_attr2",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("shaResult")),
            VarExpr::New ("eshaResultDelete_attr1")),
          VarExpr::New ("eshaResultDelete_attr2")),
        VarExpr::New ("eshaResultDelete_attr3")))));

  result->Assign (Assignor::New ("Score",
    ValueExpr::New (RealValue::New (-1))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    PROV,
    strlist ("Local",
      "eshaResultDelete_attr2",
      "eshaResultDelete_attr4",
      "eshaResultDelete_attr6",
      "Score"),
    strlist ("prov_attr1",
      "prov_attr2",
      "prov_attr3",
      "prov_attr4",
      "prov_attr5"));

  Delete (result);
}

void
HyperTextClass::Prov_rs2_1Eca0Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_rs2_1Eca0Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("Name",
    ValueExpr::New (StrValue::New ("hasword"))));

  result->Assign (Assignor::New ("Content",
    Operation::New (RN_PLUS,
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            VarExpr::New ("Name"),
            ValueExpr::New (StrValue::New ("_"))),
          VarExpr::New ("hasword_attr2")),
        ValueExpr::New (StrValue::New ("_"))),
      VarExpr::New ("hasword_attr3"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rs2"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ESHARESULTTEMP,
    strlist ("RLOC",
      "Local",
      "VID",
      "Content",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("eshaResultTemp_attr1",
      "eshaResultTemp_attr2",
      "eshaResultTemp_attr3",
      "eshaResultTemp_attr4",
      "eshaResultTemp_attr5",
      "eshaResultTemp_attr6",
      "eshaResultTemp_attr7",
      "eshaResultTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rs2_1Eca0Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_rs2_1Eca0Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("Name",
    ValueExpr::New (StrValue::New ("hasword"))));

  result->Assign (Assignor::New ("Content",
    Operation::New (RN_PLUS,
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            VarExpr::New ("Name"),
            ValueExpr::New (StrValue::New ("_"))),
          VarExpr::New ("hasword_attr2")),
        ValueExpr::New (StrValue::New ("_"))),
      VarExpr::New ("hasword_attr3"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rs2"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ESHARESULTTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "VID",
      "Content",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("eshaResultTempDelete_attr1",
      "eshaResultTempDelete_attr2",
      "eshaResultTempDelete_attr3",
      "eshaResultTempDelete_attr4",
      "eshaResultTempDelete_attr5",
      "eshaResultTempDelete_attr6",
      "eshaResultTempDelete_attr7",
      "eshaResultTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rs3_1Eca0Ins (Ptr<Tuple> links)
{
  RAPIDNET_LOG_INFO ("Prov_rs3_1Eca0Ins triggered");

  Ptr<Tuple> result = links;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("Name",
    ValueExpr::New (StrValue::New ("links"))));

  result->Assign (Assignor::New ("Content",
    Operation::New (RN_PLUS,
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            VarExpr::New ("Name"),
            ValueExpr::New (StrValue::New ("_"))),
          VarExpr::New ("links_attr2")),
        ValueExpr::New (StrValue::New ("_"))),
      VarExpr::New ("links_attr3"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("links_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rs3"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ESHARESULTTEMP,
    strlist ("RLOC",
      "Local",
      "VID",
      "Content",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("eshaResultTemp_attr1",
      "eshaResultTemp_attr2",
      "eshaResultTemp_attr3",
      "eshaResultTemp_attr4",
      "eshaResultTemp_attr5",
      "eshaResultTemp_attr6",
      "eshaResultTemp_attr7",
      "eshaResultTemp_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_rs3_1Eca0Del (Ptr<Tuple> links)
{
  RAPIDNET_LOG_INFO ("Prov_rs3_1Eca0Del triggered");

  Ptr<Tuple> result = links;

  result->Assign (Assignor::New ("PID1",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("List",
    FAppend::New (
      VarExpr::New ("PID1"))));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("Name",
    ValueExpr::New (StrValue::New ("links"))));

  result->Assign (Assignor::New ("Content",
    Operation::New (RN_PLUS,
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            VarExpr::New ("Name"),
            ValueExpr::New (StrValue::New ("_"))),
          VarExpr::New ("links_attr2")),
        ValueExpr::New (StrValue::New ("_"))),
      VarExpr::New ("links_attr3"))));

  result->Assign (Assignor::New ("RLOC",
    VarExpr::New ("links_attr1")));

  result->Assign (Assignor::New ("RWeight",
    ValueExpr::New (RealValue::New (1))));

  result->Assign (Assignor::New ("R",
    ValueExpr::New (StrValue::New ("rs3"))));

  result->Assign (Assignor::New ("RID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          VarExpr::New ("R"),
          VarExpr::New ("RLOC")),
        VarExpr::New ("List")))));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    ESHARESULTTEMPDELETE,
    strlist ("RLOC",
      "Local",
      "VID",
      "Content",
      "RID",
      "RWeight",
      "R",
      "List",
      "RLOC"),
    strlist ("eshaResultTempDelete_attr1",
      "eshaResultTempDelete_attr2",
      "eshaResultTempDelete_attr3",
      "eshaResultTempDelete_attr4",
      "eshaResultTempDelete_attr5",
      "eshaResultTempDelete_attr6",
      "eshaResultTempDelete_attr7",
      "eshaResultTempDelete_attr8",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Prov_edb_1Eca1Ins (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_edb_1Eca1Ins triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("RLoc",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("RID",
    VarExpr::New ("VID")));

  result->Assign (Assignor::New ("Score",
    VarExpr::New ("hasword_attr3")));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    PROV,
    strlist ("Local",
      "VID",
      "RID",
      "RLoc",
      "Score"),
    strlist ("prov_attr1",
      "prov_attr2",
      "prov_attr3",
      "prov_attr4",
      "prov_attr5"));

  Insert (result);
}

void
HyperTextClass::Prov_edb_1Eca1Del (Ptr<Tuple> hasword)
{
  RAPIDNET_LOG_INFO ("Prov_edb_1Eca1Del triggered");

  Ptr<Tuple> result = hasword;

  result->Assign (Assignor::New ("RLoc",
    VarExpr::New ("hasword_attr1")));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("hasword")),
            VarExpr::New ("hasword_attr1")),
          VarExpr::New ("hasword_attr2")),
        VarExpr::New ("hasword_attr3")))));

  result->Assign (Assignor::New ("RID",
    VarExpr::New ("VID")));

  result->Assign (Assignor::New ("Score",
    VarExpr::New ("hasword_attr3")));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    PROV,
    strlist ("Local",
      "VID",
      "RID",
      "RLoc",
      "Score"),
    strlist ("prov_attr1",
      "prov_attr2",
      "prov_attr3",
      "prov_attr4",
      "prov_attr5"));

  Delete (result);
}

void
HyperTextClass::Prov_edb_2Eca1Ins (Ptr<Tuple> links)
{
  RAPIDNET_LOG_INFO ("Prov_edb_2Eca1Ins triggered");

  Ptr<Tuple> result = links;

  result->Assign (Assignor::New ("RLoc",
    VarExpr::New ("links_attr1")));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("RID",
    VarExpr::New ("VID")));

  result->Assign (Assignor::New ("Score",
    VarExpr::New ("links_attr3")));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    PROV,
    strlist ("Local",
      "VID",
      "RID",
      "RLoc",
      "Score"),
    strlist ("prov_attr1",
      "prov_attr2",
      "prov_attr3",
      "prov_attr4",
      "prov_attr5"));

  Insert (result);
}

void
HyperTextClass::Prov_edb_2Eca1Del (Ptr<Tuple> links)
{
  RAPIDNET_LOG_INFO ("Prov_edb_2Eca1Del triggered");

  Ptr<Tuple> result = links;

  result->Assign (Assignor::New ("RLoc",
    VarExpr::New ("links_attr1")));

  result->Assign (Assignor::New ("VID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("links")),
            VarExpr::New ("links_attr1")),
          VarExpr::New ("links_attr2")),
        VarExpr::New ("links_attr3")))));

  result->Assign (Assignor::New ("RID",
    VarExpr::New ("VID")));

  result->Assign (Assignor::New ("Score",
    VarExpr::New ("links_attr3")));

  result->Assign (Assignor::New ("Local",
    LOCAL_ADDRESS));

  result = result->Project (
    PROV,
    strlist ("Local",
      "VID",
      "RID",
      "RLoc",
      "Score"),
    strlist ("prov_attr1",
      "prov_attr2",
      "prov_attr3",
      "prov_attr4",
      "prov_attr5"));

  Delete (result);
}

void
HyperTextClass::Edb1_eca (Ptr<Tuple> provQuery)
{
  RAPIDNET_LOG_INFO ("Edb1_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (PROV)->Join (
    provQuery,
    strlist ("prov_attr2", "prov_attr1"),
    strlist ("provQuery_attr3", "provQuery_attr1"));

  result = GetRelation (SHARESULT)->Join (
    result,
    strlist ("shaResult_attr2", "shaResult_attr1"),
    strlist ("provQuery_attr3", "provQuery_attr1"));

  result->Assign (Assignor::New ("Prov",
    VarExpr::New ("shaResult_attr3")));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("prov_attr3"),
      VarExpr::New ("provQuery_attr3"))));

  result = result->Project (
    PRETURN,
    strlist ("provQuery_attr5",
      "provQuery_attr2",
      "provQuery_attr3",
      "Prov",
      "provQuery_attr5"),
    strlist ("pReturn_attr1",
      "pReturn_attr2",
      "pReturn_attr3",
      "pReturn_attr4",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Idb1a_eca (Ptr<Tuple> provQuery)
{
  RAPIDNET_LOG_INFO ("Idb1a_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (PROV)->Join (
    provQuery,
    strlist ("prov_attr2", "prov_attr1"),
    strlist ("provQuery_attr3", "provQuery_attr1"));

  result = result->Select (Selector::New (
    Operation::New (RN_NEQ,
      VarExpr::New ("prov_attr3"),
      VarExpr::New ("provQuery_attr3"))));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      FMember::New (
        VarExpr::New ("provQuery_attr4"),
        VarExpr::New ("provQuery_attr3")),
      ValueExpr::New (Int32Value::New (0)))));

  result = AggWrapList::New ()->Compute (result, provQuery, "prov_attr3");

  result = result->Project (
    PQLIST,
    strlist ("provQuery_attr1",
      "provQuery_attr2",
      "provQuery_attr4",
      "list"),
    strlist ("pQList_attr1",
      "pQList_attr2",
      "pQList_attr3",
      "pQList_attr4"));

  Insert (result);
}

void
HyperTextClass::Idb1b_eca (Ptr<Tuple> provQuery)
{
  RAPIDNET_LOG_INFO ("Idb1b_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (SHARESULT)->Join (
    provQuery,
    strlist ("shaResult_attr2", "shaResult_attr1"),
    strlist ("provQuery_attr3", "provQuery_attr1"));

  result->Assign (Assignor::New ("Prov",
    VarExpr::New ("shaResult_attr3")));

  result = result->Select (Selector::New (
    Operation::New (RN_GT,
      FMember::New (
        VarExpr::New ("provQuery_attr4"),
        VarExpr::New ("provQuery_attr3")),
      ValueExpr::New (Int32Value::New (0)))));

  result = result->Project (
    PRETURN,
    strlist ("provQuery_attr5",
      "provQuery_attr2",
      "provQuery_attr3",
      "Prov",
      "provQuery_attr5"),
    strlist ("pReturn_attr1",
      "pReturn_attr2",
      "pReturn_attr3",
      "pReturn_attr4",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Idb2_eca (Ptr<Tuple> provQuery)
{
  RAPIDNET_LOG_INFO ("Idb2_eca triggered");

  Ptr<Tuple> result = provQuery;

  result->Assign (Assignor::New ("Buf",
    FEmpty::New (
)));

  result = result->Project (
    PRESULTTMP,
    strlist ("provQuery_attr1",
      "provQuery_attr2",
      "provQuery_attr5",
      "provQuery_attr3",
      "Buf"),
    strlist ("pResultTmp_attr1",
      "pResultTmp_attr2",
      "pResultTmp_attr3",
      "pResultTmp_attr4",
      "pResultTmp_attr5"));

  Insert (result);
}

void
HyperTextClass::Idb3_eca (Ptr<Tuple> provQuery)
{
  RAPIDNET_LOG_INFO ("Idb3_eca triggered");

  Ptr<Tuple> result = provQuery;

  result->Assign (Assignor::New ("N",
    ValueExpr::New (Int32Value::New (1))));

  result = result->Project (
    PITERATE,
    strlist ("provQuery_attr1",
      "provQuery_attr2",
      "N"),
    strlist ("pIterate_attr1",
      "pIterate_attr2",
      "pIterate_attr3"));

  SendLocal (result);
}

void
HyperTextClass::Idb4_eca (Ptr<Tuple> pIterate)
{
  RAPIDNET_LOG_INFO ("Idb4_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (PQLIST)->Join (
    pIterate,
    strlist ("pQList_attr2", "pQList_attr1"),
    strlist ("pIterate_attr2", "pIterate_attr1"));

  result->Assign (Assignor::New ("N",
    Operation::New (RN_PLUS,
      VarExpr::New ("pIterate_attr3"),
      ValueExpr::New (Int32Value::New (1)))));

  result = result->Select (Selector::New (
    Operation::New (RN_LT,
      VarExpr::New ("pIterate_attr3"),
      FSize::New (
        VarExpr::New ("pQList_attr4")))));

  result = result->Project (
    PITERATE,
    strlist ("pIterate_attr1",
      "pIterate_attr2",
      "N"),
    strlist ("pIterate_attr1",
      "pIterate_attr2",
      "pIterate_attr3"));

  SendLocal (result);
}

void
HyperTextClass::Idb5_eca (Ptr<Tuple> pIterate)
{
  RAPIDNET_LOG_INFO ("Idb5_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (PQLIST)->Join (
    pIterate,
    strlist ("pQList_attr2", "pQList_attr1"),
    strlist ("pIterate_attr2", "pIterate_attr1"));

  result->Assign (Assignor::New ("RID",
    FItem::New (
      VarExpr::New ("pQList_attr4"),
      VarExpr::New ("pIterate_attr3"))));

  result->Assign (Assignor::New ("NQID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          ValueExpr::New (StrValue::New ("")),
          VarExpr::New ("pIterate_attr2")),
        VarExpr::New ("RID")))));

  result = result->Select (Selector::New (
    Operation::New (RN_LTE,
      VarExpr::New ("pIterate_attr3"),
      FSize::New (
        VarExpr::New ("pQList_attr4")))));

  result = result->Project (
    ERULEQUERY,
    strlist ("pIterate_attr1",
      "NQID",
      "RID",
      "pQList_attr3"),
    strlist ("eRuleQuery_attr1",
      "eRuleQuery_attr2",
      "eRuleQuery_attr3",
      "eRuleQuery_attr4"));

  SendLocal (result);
}

void
HyperTextClass::Idb6_eca (Ptr<Tuple> eRuleQuery)
{
  RAPIDNET_LOG_INFO ("Idb6_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (PROV)->Join (
    eRuleQuery,
    strlist ("prov_attr3", "prov_attr1"),
    strlist ("eRuleQuery_attr3", "eRuleQuery_attr1"));

  result->Assign (Assignor::New ("P2",
    FAppend::New (
      VarExpr::New ("prov_attr2"))));

  result->Assign (Assignor::New ("P",
    FConcat::New (
      VarExpr::New ("eRuleQuery_attr4"),
      VarExpr::New ("P2"))));

  result = result->Project (
    RULEQUERY,
    strlist ("prov_attr4",
      "eRuleQuery_attr2",
      "eRuleQuery_attr3",
      "P",
      "eRuleQuery_attr1",
      "prov_attr4"),
    strlist ("ruleQuery_attr1",
      "ruleQuery_attr2",
      "ruleQuery_attr3",
      "ruleQuery_attr4",
      "ruleQuery_attr5",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Idb7_eca (Ptr<Tuple> rReturn)
{
  RAPIDNET_LOG_INFO ("Idb7_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (PRESULTTMP)->Join (
    rReturn,
    strlist ("pResultTmp_attr1"),
    strlist ("rReturn_attr1"));

  result->Assign (Assignor::New ("Buf2",
    FAppend::New (
      VarExpr::New ("rReturn_attr4"))));

  result->Assign (Assignor::New ("Buf",
    FConcat::New (
      VarExpr::New ("pResultTmp_attr5"),
      VarExpr::New ("Buf2"))));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("rReturn_attr2"),
      FSha1::New (
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("")),
            VarExpr::New ("pResultTmp_attr2")),
          VarExpr::New ("rReturn_attr3"))))));

  result = result->Project (
    PRESULTTMP,
    strlist ("rReturn_attr1",
      "pResultTmp_attr2",
      "pResultTmp_attr3",
      "pResultTmp_attr4",
      "Buf"),
    strlist ("pResultTmp_attr1",
      "pResultTmp_attr2",
      "pResultTmp_attr3",
      "pResultTmp_attr4",
      "pResultTmp_attr5"));

  Insert (result);
}

void
HyperTextClass::Idb8Eca0Ins (Ptr<Tuple> pResultTmp)
{
  RAPIDNET_LOG_INFO ("Idb8Eca0Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (PQLIST)->Join (
    pResultTmp,
    strlist ("pQList_attr2", "pQList_attr1"),
    strlist ("pResultTmp_attr2", "pResultTmp_attr1"));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      FSize::New (
        VarExpr::New ("pResultTmp_attr5")),
      FSize::New (
        VarExpr::New ("pQList_attr4")))));

  result = result->Select (Selector::New (
    Operation::New (RN_NEQ,
      FSize::New (
        VarExpr::New ("pResultTmp_attr5")),
      ValueExpr::New (Int32Value::New (0)))));

  result = result->Project (
    EPRETURN,
    strlist ("pResultTmp_attr1",
      "pResultTmp_attr2"),
    strlist ("ePReturn_attr1",
      "ePReturn_attr2"));

  SendLocal (result);
}

void
HyperTextClass::Idb8Eca1Ins (Ptr<Tuple> pQList)
{
  RAPIDNET_LOG_INFO ("Idb8Eca1Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (PRESULTTMP)->Join (
    pQList,
    strlist ("pResultTmp_attr2", "pResultTmp_attr1"),
    strlist ("pQList_attr2", "pQList_attr1"));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      FSize::New (
        VarExpr::New ("pResultTmp_attr5")),
      FSize::New (
        VarExpr::New ("pQList_attr4")))));

  result = result->Select (Selector::New (
    Operation::New (RN_NEQ,
      FSize::New (
        VarExpr::New ("pResultTmp_attr5")),
      ValueExpr::New (Int32Value::New (0)))));

  result = result->Project (
    EPRETURN,
    strlist ("pQList_attr1",
      "pQList_attr2"),
    strlist ("ePReturn_attr1",
      "ePReturn_attr2"));

  SendLocal (result);
}

void
HyperTextClass::Idb9a_eca (Ptr<Tuple> ePReturn)
{
  RAPIDNET_LOG_INFO ("Idb9a_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (PRESULTTMP)->Join (
    ePReturn,
    strlist ("pResultTmp_attr2", "pResultTmp_attr1"),
    strlist ("ePReturn_attr2", "ePReturn_attr1"));

  result = GetRelation (SHARESULT)->Join (
    result,
    strlist ("shaResult_attr2", "shaResult_attr1"),
    strlist ("pResultTmp_attr4", "ePReturn_attr1"));

  result->Assign (Assignor::New ("Prov1",
    FPIdb::New (
      VarExpr::New ("pResultTmp_attr5"),
      VarExpr::New ("ePReturn_attr1"))));

  result->Assign (Assignor::New ("Prov",
    Operation::New (RN_PLUS,
      VarExpr::New ("shaResult_attr3"),
      VarExpr::New ("Prov1"))));

  result = result->Project (
    PRETURN,
    strlist ("pResultTmp_attr3",
      "ePReturn_attr2",
      "pResultTmp_attr4",
      "Prov",
      "pResultTmp_attr3"),
    strlist ("pReturn_attr1",
      "pReturn_attr2",
      "pReturn_attr3",
      "pReturn_attr4",
      RN_DEST));

  Send (result);
}

void
HyperTextClass::Rv1_eca (Ptr<Tuple> ruleQuery)
{
  RAPIDNET_LOG_INFO ("Rv1_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (RULEEXEC)->Join (
    ruleQuery,
    strlist ("ruleExec_attr2", "ruleExec_attr1"),
    strlist ("ruleQuery_attr3", "ruleQuery_attr1"));

  result = result->Project (
    RQLIST,
    strlist ("ruleQuery_attr1",
      "ruleQuery_attr2",
      "ruleQuery_attr4",
      "ruleExec_attr5"),
    strlist ("rQList_attr1",
      "rQList_attr2",
      "rQList_attr3",
      "rQList_attr4"));

  Insert (result);
}

void
HyperTextClass::Rv2_eca (Ptr<Tuple> ruleQuery)
{
  RAPIDNET_LOG_INFO ("Rv2_eca triggered");

  Ptr<Tuple> result = ruleQuery;

  result->Assign (Assignor::New ("Buf",
    FEmpty::New (
)));

  result = result->Project (
    RRESULTTMP,
    strlist ("ruleQuery_attr1",
      "ruleQuery_attr2",
      "ruleQuery_attr5",
      "ruleQuery_attr3",
      "Buf"),
    strlist ("rResultTmp_attr1",
      "rResultTmp_attr2",
      "rResultTmp_attr3",
      "rResultTmp_attr4",
      "rResultTmp_attr5"));

  Insert (result);
}

void
HyperTextClass::Rv3_eca (Ptr<Tuple> ruleQuery)
{
  RAPIDNET_LOG_INFO ("Rv3_eca triggered");

  Ptr<Tuple> result = ruleQuery;

  result->Assign (Assignor::New ("N",
    ValueExpr::New (Int32Value::New (1))));

  result = result->Project (
    RITERATE,
    strlist ("ruleQuery_attr1",
      "ruleQuery_attr2",
      "N"),
    strlist ("rIterate_attr1",
      "rIterate_attr2",
      "rIterate_attr3"));

  SendLocal (result);
}

void
HyperTextClass::Rv4_eca (Ptr<Tuple> rIterate)
{
  RAPIDNET_LOG_INFO ("Rv4_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (RQLIST)->Join (
    rIterate,
    strlist ("rQList_attr2", "rQList_attr1"),
    strlist ("rIterate_attr2", "rIterate_attr1"));

  result->Assign (Assignor::New ("N",
    Operation::New (RN_PLUS,
      VarExpr::New ("rIterate_attr3"),
      ValueExpr::New (Int32Value::New (1)))));

  result = result->Select (Selector::New (
    Operation::New (RN_LT,
      VarExpr::New ("rIterate_attr3"),
      FSize::New (
        VarExpr::New ("rQList_attr4")))));

  result = result->Project (
    RITERATE,
    strlist ("rIterate_attr1",
      "rIterate_attr2",
      "N"),
    strlist ("rIterate_attr1",
      "rIterate_attr2",
      "rIterate_attr3"));

  SendLocal (result);
}

void
HyperTextClass::Rv5_eca (Ptr<Tuple> rIterate)
{
  RAPIDNET_LOG_INFO ("Rv5_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (RQLIST)->Join (
    rIterate,
    strlist ("rQList_attr2", "rQList_attr1"),
    strlist ("rIterate_attr2", "rIterate_attr1"));

  result->Assign (Assignor::New ("VID",
    FItem::New (
      VarExpr::New ("rQList_attr4"),
      VarExpr::New ("rIterate_attr3"))));

  result->Assign (Assignor::New ("NQID",
    FSha1::New (
      Operation::New (RN_PLUS,
        Operation::New (RN_PLUS,
          ValueExpr::New (StrValue::New ("")),
          VarExpr::New ("rIterate_attr2")),
        VarExpr::New ("VID")))));

  result = result->Project (
    EPROVQUERY,
    strlist ("rIterate_attr1",
      "NQID",
      "VID",
      "rQList_attr3"),
    strlist ("eProvQuery_attr1",
      "eProvQuery_attr2",
      "eProvQuery_attr3",
      "eProvQuery_attr4"));

  SendLocal (result);
}

void
HyperTextClass::Rv6_eca (Ptr<Tuple> eProvQuery)
{
  RAPIDNET_LOG_INFO ("Rv6_eca triggered");

  Ptr<Tuple> result = eProvQuery;

  result->Assign (Assignor::New ("$1",
    VarExpr::New ("eProvQuery_attr1")));

  result = result->Project (
    PROVQUERY,
    strlist ("eProvQuery_attr1",
      "eProvQuery_attr2",
      "eProvQuery_attr3",
      "eProvQuery_attr4",
      "$1"),
    strlist ("provQuery_attr1",
      "provQuery_attr2",
      "provQuery_attr3",
      "provQuery_attr4",
      "provQuery_attr5"));

  SendLocal (result);
}

void
HyperTextClass::Rv7_eca (Ptr<Tuple> pReturn)
{
  RAPIDNET_LOG_INFO ("Rv7_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (RRESULTTMP)->Join (
    pReturn,
    strlist ("rResultTmp_attr1"),
    strlist ("pReturn_attr1"));

  result->Assign (Assignor::New ("Buf2",
    FAppend::New (
      VarExpr::New ("pReturn_attr4"))));

  result->Assign (Assignor::New ("Buf",
    FConcat::New (
      VarExpr::New ("rResultTmp_attr5"),
      VarExpr::New ("Buf2"))));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      VarExpr::New ("pReturn_attr2"),
      FSha1::New (
        Operation::New (RN_PLUS,
          Operation::New (RN_PLUS,
            ValueExpr::New (StrValue::New ("")),
            VarExpr::New ("rResultTmp_attr2")),
          VarExpr::New ("pReturn_attr3"))))));

  result = result->Project (
    RRESULTTMP,
    strlist ("pReturn_attr1",
      "rResultTmp_attr2",
      "rResultTmp_attr3",
      "rResultTmp_attr4",
      "Buf"),
    strlist ("rResultTmp_attr1",
      "rResultTmp_attr2",
      "rResultTmp_attr3",
      "rResultTmp_attr4",
      "rResultTmp_attr5"));

  Insert (result);
}

void
HyperTextClass::Rv8Eca0Ins (Ptr<Tuple> rResultTmp)
{
  RAPIDNET_LOG_INFO ("Rv8Eca0Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (RQLIST)->Join (
    rResultTmp,
    strlist ("rQList_attr2", "rQList_attr1"),
    strlist ("rResultTmp_attr2", "rResultTmp_attr1"));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      FSize::New (
        VarExpr::New ("rResultTmp_attr5")),
      FSize::New (
        VarExpr::New ("rQList_attr4")))));

  result = result->Project (
    ERRETURN,
    strlist ("rResultTmp_attr1",
      "rResultTmp_attr2"),
    strlist ("eRReturn_attr1",
      "eRReturn_attr2"));

  SendLocal (result);
}

void
HyperTextClass::Rv8Eca1Ins (Ptr<Tuple> rQList)
{
  RAPIDNET_LOG_INFO ("Rv8Eca1Ins triggered");

  Ptr<RelationBase> result;

  result = GetRelation (RRESULTTMP)->Join (
    rQList,
    strlist ("rResultTmp_attr2", "rResultTmp_attr1"),
    strlist ("rQList_attr2", "rQList_attr1"));

  result = result->Select (Selector::New (
    Operation::New (RN_EQ,
      FSize::New (
        VarExpr::New ("rResultTmp_attr5")),
      FSize::New (
        VarExpr::New ("rQList_attr4")))));

  result = result->Project (
    ERRETURN,
    strlist ("rQList_attr1",
      "rQList_attr2"),
    strlist ("eRReturn_attr1",
      "eRReturn_attr2"));

  SendLocal (result);
}

void
HyperTextClass::Rv9_eca (Ptr<Tuple> eRReturn)
{
  RAPIDNET_LOG_INFO ("Rv9_eca triggered");

  Ptr<RelationBase> result;

  result = GetRelation (RRESULTTMP)->Join (
    eRReturn,
    strlist ("rResultTmp_attr2", "rResultTmp_attr1"),
    strlist ("eRReturn_attr2", "eRReturn_attr1"));

  result = GetRelation (RULEEXEC)->Join (
    result,
    strlist ("ruleExec_attr2", "ruleExec_attr1"),
    strlist ("rResultTmp_attr4", "eRReturn_attr1"));

  result->Assign (Assignor::New ("Prov",
    FPRule::New (
      VarExpr::New ("rResultTmp_attr5"),
      VarExpr::New ("eRReturn_attr1"),
      VarExpr::New ("ruleExec_attr4"),
      VarExpr::New ("ruleExec_attr3"))));

  result = result->Project (
    RRETURN,
    strlist ("rResultTmp_attr3",
      "eRReturn_attr2",
      "rResultTmp_attr4",
      "Prov",
      "rResultTmp_attr3"),
    strlist ("rReturn_attr1",
      "rReturn_attr2",
      "rReturn_attr3",
      "rReturn_attr4",
      RN_DEST));

  Send (result);
}

