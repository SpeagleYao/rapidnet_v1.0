ECA Rule prov_r1a_1Eca0Ins ACTION_REMOTE_SEND<ecancerTemp(@RLOC, Local, P, RID, RWeight, R, List)> :- EVENT_INSERT<smoke(@Local, P)>, PID1 := f_sha1((smoke+ Local)+ P), List := f_append(PID1), RLOC := Local, RWeight := 0.89, R := r1a, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1a_1Eca0Del ACTION_REMOTE_SEND<ecancerTempDelete(@RLOC, Local, P, RID, RWeight, R, List)> :- EVENT_DELETE<smoke(@Local, P)>, PID1 := f_sha1((smoke+ Local)+ P), List := f_append(PID1), RLOC := Local, RWeight := 0.89, R := r1a, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1a_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<ecancerTemp(@RLOC, Local, P, RID, RWeight, R, List)>.
ECA Rule prov_r1a_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<ecancerTempDelete(@RLOC, Local, P, RID, RWeight, R, List)>.
ECA Rule prov_r1a_3_ecaAdd ACTION_REMOTE_SEND<ecancer(@Local, P, RID, RWeight, RLOC)> :- EVENT_RECV<ecancerTemp(@RLOC, Local, P, RID, RWeight, R, List)>.
ECA Rule prov_r1a_3_ecaDel ACTION_REMOTE_SEND<ecancerDelete(@Local, P, RID, RWeight, RLOC)> :- EVENT_RECV<ecancerTempDelete(@RLOC, Local, P, RID, RWeight, R, List)>.
ECA Rule prov_r1a_4_ecaAdd ACTION_ADD<cancer(@Local, P)> :- EVENT_RECV<ecancer(@Local, P, RID, RWeight, RLOC)>.
ECA Rule prov_r1a_4_ecaDel ACTION_DELETE<cancer(@Local, P)> :- EVENT_RECV<ecancerDelete(@Local, P, RID, RWeight, RLOC)>.
ECA Rule prov_r1a_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<ecancer(@Local, P, RID, RWeight, RLOC)>, VID := f_sha1((cancer+ Local)+ P), Score := -1.
ECA Rule prov_r1a_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<ecancerDelete(@Local, P, RID, RWeight, RLOC)>, VID := f_sha1((cancer+ Local)+ P), Score := -1.
ECA Rule prov_r2_1Eca0Ins ACTION_REMOTE_SEND<esmokeTemp(@RLOC, Local, A, RID, RWeight, R, List)> :- EVENT_INSERT<friends(@Local, A, B)>, smokeEvent(@Local, B), PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), PID2 := f_sha1((smokeEvent+ Local)+ B), List2 := f_append(PID2), List := f_concat(List, List2), A != B, RLOC := Local, RWeight := 0.44, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r2_1Eca0Del ACTION_REMOTE_SEND<esmokeTempDelete(@RLOC, Local, A, RID, RWeight, R, List)> :- EVENT_DELETE<friends(@Local, A, B)>, smokeEvent(@Local, B), PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), PID2 := f_sha1((smokeEvent+ Local)+ B), List2 := f_append(PID2), List := f_concat(List, List2), A != B, RLOC := Local, RWeight := 0.44, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r2_1Eca3Ins ACTION_REMOTE_SEND<esmokeTemp(@RLOC, Local, A, RID, RWeight, R, List)> :- EVENT_INSERT<smokeEvent(@Local, B)>, friends(@Local, A, B), PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), PID2 := f_sha1((smokeEvent+ Local)+ B), List2 := f_append(PID2), List := f_concat(List, List2), A != B, RLOC := Local, RWeight := 0.44, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r2_1Eca3Del ACTION_REMOTE_SEND<esmokeTempDelete(@RLOC, Local, A, RID, RWeight, R, List)> :- EVENT_DELETE<smokeEvent(@Local, B)>, friends(@Local, A, B), PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), PID2 := f_sha1((smokeEvent+ Local)+ B), List2 := f_append(PID2), List := f_concat(List, List2), A != B, RLOC := Local, RWeight := 0.44, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r2_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<esmokeTemp(@RLOC, Local, A, RID, RWeight, R, List)>.
ECA Rule prov_r2_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<esmokeTempDelete(@RLOC, Local, A, RID, RWeight, R, List)>.
ECA Rule prov_r2_3_ecaAdd ACTION_REMOTE_SEND<esmoke(@Local, A, RID, RWeight, RLOC)> :- EVENT_RECV<esmokeTemp(@RLOC, Local, A, RID, RWeight, R, List)>.
ECA Rule prov_r2_3_ecaDel ACTION_REMOTE_SEND<esmokeDelete(@Local, A, RID, RWeight, RLOC)> :- EVENT_RECV<esmokeTempDelete(@RLOC, Local, A, RID, RWeight, R, List)>.
ECA Rule prov_r2_4_ecaAdd ACTION_ADD<smoke(@Local, A)> :- EVENT_RECV<esmoke(@Local, A, RID, RWeight, RLOC)>.
ECA Rule prov_r2_4_ecaDel ACTION_DELETE<smoke(@Local, A)> :- EVENT_RECV<esmokeDelete(@Local, A, RID, RWeight, RLOC)>.
ECA Rule prov_r2_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<esmoke(@Local, A, RID, RWeight, RLOC)>, VID := f_sha1((smoke+ Local)+ A), Score := -1.
ECA Rule prov_r2_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<esmokeDelete(@Local, A, RID, RWeight, RLOC)>, VID := f_sha1((smoke+ Local)+ A), Score := -1.
ECA Rule prov_r3_1Eca0Ins ACTION_REMOTE_SEND<esmokeTemp(@RLOC, Local, B, RID, RWeight, R, List)> :- EVENT_INSERT<friends(@Local, A, B)>, smokeEvent(@Local, A), PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), PID2 := f_sha1((smokeEvent+ Local)+ A), List2 := f_append(PID2), List := f_concat(List, List2), A != B, RLOC := Local, RWeight := 0.44, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca0Del ACTION_REMOTE_SEND<esmokeTempDelete(@RLOC, Local, B, RID, RWeight, R, List)> :- EVENT_DELETE<friends(@Local, A, B)>, smokeEvent(@Local, A), PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), PID2 := f_sha1((smokeEvent+ Local)+ A), List2 := f_append(PID2), List := f_concat(List, List2), A != B, RLOC := Local, RWeight := 0.44, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca3Ins ACTION_REMOTE_SEND<esmokeTemp(@RLOC, Local, B, RID, RWeight, R, List)> :- EVENT_INSERT<smokeEvent(@Local, A)>, friends(@Local, A, B), PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), PID2 := f_sha1((smokeEvent+ Local)+ A), List2 := f_append(PID2), List := f_concat(List, List2), A != B, RLOC := Local, RWeight := 0.44, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1Eca3Del ACTION_REMOTE_SEND<esmokeTempDelete(@RLOC, Local, B, RID, RWeight, R, List)> :- EVENT_DELETE<smokeEvent(@Local, A)>, friends(@Local, A, B), PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), PID2 := f_sha1((smokeEvent+ Local)+ A), List2 := f_append(PID2), List := f_concat(List, List2), A != B, RLOC := Local, RWeight := 0.44, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca0Ins ACTION_REMOTE_SEND<esmokeTemp(@RLOC, Local, P, RID, RWeight, R, List)> :- EVENT_INSERT<smokeEvent(@Local, P)>, PID1 := f_sha1((smokeEvent+ Local)+ P), List := f_append(PID1), RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r4_1Eca0Del ACTION_REMOTE_SEND<esmokeTempDelete(@RLOC, Local, P, RID, RWeight, R, List)> :- EVENT_DELETE<smokeEvent(@Local, P)>, PID1 := f_sha1((smokeEvent+ Local)+ P), List := f_append(PID1), RLOC := Local, RWeight := 1, R := r4, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r11_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<smoke(@Local, P)>, PID1 := f_sha1((smoke+ Local)+ P), List := f_append(PID1), VID := f_sha1((smoke+ Local)+ P), Name := smoke, Content := Name+ P, RLOC := Local, RWeight := 1, R := r11, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r11_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<smoke(@Local, P)>, PID1 := f_sha1((smoke+ Local)+ P), List := f_append(PID1), VID := f_sha1((smoke+ Local)+ P), Name := smoke, Content := Name+ P, RLOC := Local, RWeight := 1, R := r11, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r11_2_ecaAdd ACTION_ADD<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r11_2_ecaDel ACTION_DELETE<ruleExec(@RLOC, RID, RWeight, R, List)> :- EVENT_RECV<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r11_3_ecaAdd ACTION_REMOTE_SEND<eshaResult(@Local, VID, Content, RID, RWeight, RLOC)> :- EVENT_RECV<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r11_3_ecaDel ACTION_REMOTE_SEND<eshaResultDelete(@Local, VID, Content, RID, RWeight, RLOC)> :- EVENT_RECV<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)>.
ECA Rule prov_r11_4_ecaAdd ACTION_ADD<shaResult(@Local, VID, Content)> :- EVENT_RECV<eshaResult(@Local, VID, Content, RID, RWeight, RLOC)>.
ECA Rule prov_r11_4_ecaDel ACTION_DELETE<shaResult(@Local, VID, Content)> :- EVENT_RECV<eshaResultDelete(@Local, VID, Content, RID, RWeight, RLOC)>.
ECA Rule prov_r11_5_ecaAdd ACTION_ADD<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eshaResult(@Local, VID, Content, RID, RWeight, RLOC)>, VID := f_sha1(((shaResult+ Local)+ VID)+ Content), Score := -1.
ECA Rule prov_r11_5_ecaDel ACTION_DELETE<prov(@Local, VID, RID, RLOC, Score)> :- EVENT_RECV<eshaResultDelete(@Local, VID, Content, RID, RWeight, RLOC)>, VID := f_sha1(((shaResult+ Local)+ VID)+ Content), Score := -1.
ECA Rule prov_r12_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<cancer(@Local, P)>, PID1 := f_sha1((cancer+ Local)+ P), List := f_append(PID1), VID := f_sha1((cancer+ Local)+ P), Name := cancer, Content := Name+ P, RLOC := Local, RWeight := 1, R := r12, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r12_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<cancer(@Local, P)>, PID1 := f_sha1((cancer+ Local)+ P), List := f_append(PID1), VID := f_sha1((cancer+ Local)+ P), Name := cancer, Content := Name+ P, RLOC := Local, RWeight := 1, R := r12, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r13_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<friends(@Local, A, B)>, PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), VID := f_sha1(((friends+ Local)+ A)+ B), Name := friends, Content := ((Name+ A)+ _)+ B, RLOC := Local, RWeight := 1, R := r13, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r13_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<friends(@Local, A, B)>, PID1 := f_sha1(((friends+ Local)+ A)+ B), List := f_append(PID1), VID := f_sha1(((friends+ Local)+ A)+ B), Name := friends, Content := ((Name+ A)+ _)+ B, RLOC := Local, RWeight := 1, R := r13, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r14_1Eca0Ins ACTION_REMOTE_SEND<eshaResultTemp(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_INSERT<smokeEvent(@Local, P)>, PID1 := f_sha1((smokeEvent+ Local)+ P), List := f_append(PID1), VID := f_sha1((smokeEvent+ Local)+ P), Name := smokeEvent, Content := Name+ P, RLOC := Local, RWeight := 1, R := r14, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r14_1Eca0Del ACTION_REMOTE_SEND<eshaResultTempDelete(@RLOC, Local, VID, Content, RID, RWeight, R, List)> :- EVENT_DELETE<smokeEvent(@Local, P)>, PID1 := f_sha1((smokeEvent+ Local)+ P), List := f_append(PID1), VID := f_sha1((smokeEvent+ Local)+ P), Name := smokeEvent, Content := Name+ P, RLOC := Local, RWeight := 1, R := r14, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_edb_1Eca1Ins ACTION_ADD<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_INSERT<friends(@Local, A, B)>, RLoc := Local, VID := f_sha1(((friends+ Local)+ A)+ B), RID := VID, Score := B.
ECA Rule prov_edb_1Eca1Del ACTION_DELETE<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_DELETE<friends(@Local, A, B)>, RLoc := Local, VID := f_sha1(((friends+ Local)+ A)+ B), RID := VID, Score := B.
ECA Rule prov_edb_2Eca1Ins ACTION_ADD<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_INSERT<smokeEvent(@Local, B)>, RLoc := Local, VID := f_sha1((smokeEvent+ Local)+ B), RID := VID, Score := B.
ECA Rule prov_edb_2Eca1Del ACTION_DELETE<prov(@Local, VID, RID, RLoc, Score)> :- EVENT_DELETE<smokeEvent(@Local, B)>, RLoc := Local, VID := f_sha1((smokeEvent+ Local)+ B), RID := VID, Score := B.
ECA Rule edb1_eca ACTION_REMOTE_SEND<pReturn(@Ret, QID, VID, Prov)> :- EVENT_RECV<provQuery(@X, QID, VID, Ret)>, prov(@X, VID, RID, RLoc, Score), shaResult(@X, VID, Content), RID == VID, Prov := Content.
ECA Rule idb1_eca ACTION_ADD<pQList(@X, QID, LIST< RID >)> :- EVENT_RECV<provQuery(@X, QID, VID, Ret)>, prov(@X, VID, RID, RLoc, Score), RID != VID.
ECA Rule idb2_eca ACTION_ADD<pResultTmp(@X, QID, Ret, VID, Buf)> :- EVENT_RECV<provQuery(@X, QID, VID, Ret)>, Buf := f_empty().
ECA Rule idb3_eca ACTION_LOCAL_SEND<pIterate(@X, QID, N)> :- EVENT_RECV<provQuery(@X, QID, VID, Ret)>, N := 1.
ECA Rule idb4_eca ACTION_LOCAL_SEND<pIterate(@X, QID, N)> :- EVENT_RECV<pIterate(@X, QID, N1)>, pQList(@X, QID, List), N1 < f_size(List), N := N1+ 1.
ECA Rule idb5_eca ACTION_LOCAL_SEND<eRuleQuery(@X, NQID, RID)> :- EVENT_RECV<pIterate(@X, QID, N)>, pQList(@X, QID, List), N <= f_size(List), RID := f_item(List, N), NQID := f_sha1((+ QID)+ RID).
ECA Rule idb6_eca ACTION_REMOTE_SEND<ruleQuery(@RLoc, QID, RID, X)> :- EVENT_RECV<eRuleQuery(@X, QID, RID)>, prov(@X, VID, RID, RLoc, Score).
ECA Rule idb7_eca ACTION_ADD<pResultTmp(@X, QID, Ret, VID, Buf)> :- EVENT_RECV<rReturn(@X, NQID, RID, Prov)>, pResultTmp(@X, QID, Ret, VID, Buf1), NQID == f_sha1((+ QID)+ RID), Buf2 := f_append(Prov), Buf := f_concat(Buf1, Buf2).
ECA Rule idb8Eca0Ins ACTION_LOCAL_SEND<ePReturn(@X, QID)> :- EVENT_INSERT<pResultTmp(@X, QID, Ret, VID, Buf)>, pQList(@X, QID, List), f_size(Buf) == f_size(List), f_size(Buf) != 0.
ECA Rule idb8Eca1Ins ACTION_LOCAL_SEND<ePReturn(@X, QID)> :- EVENT_INSERT<pQList(@X, QID, List)>, pResultTmp(@X, QID, Ret, VID, Buf), f_size(Buf) == f_size(List), f_size(Buf) != 0.
ECA Rule idb9_eca ACTION_REMOTE_SEND<pReturn(@Ret, QID, VID, Prov)> :- EVENT_RECV<ePReturn(@X, QID)>, pResultTmp(@X, QID, Ret, VID, Buf), Prov := f_pIDB(Buf, X).
ECA Rule rv1_eca ACTION_ADD<rQList(@X, QID, List)> :- EVENT_RECV<ruleQuery(@X, QID, RID, Ret)>, ruleExec(@X, RID, RWeight, R, List).
ECA Rule rv2_eca ACTION_ADD<rResultTmp(@X, QID, Ret, RID, Buf)> :- EVENT_RECV<ruleQuery(@X, QID, RID, Ret)>, Buf := f_empty().
ECA Rule rv3_eca ACTION_LOCAL_SEND<rIterate(@X, QID, N)> :- EVENT_RECV<ruleQuery(@X, QID, RID, Ret)>, N := 1.
ECA Rule rv4_eca ACTION_LOCAL_SEND<rIterate(@X, QID, N)> :- EVENT_RECV<rIterate(@X, QID, N1)>, rQList(@X, QID, List), N1 < f_size(List), N := N1+ 1.
ECA Rule rv5_eca ACTION_LOCAL_SEND<eProvQuery(@X, NQID, VID)> :- EVENT_RECV<rIterate(@X, QID, N)>, rQList(@X, QID, List), VID := f_item(List, N), NQID := f_sha1((+ QID)+ VID).
ECA Rule rv6_eca ACTION_LOCAL_SEND<provQuery(@X, QID, VID, $1)> :- EVENT_RECV<eProvQuery(@X, QID, VID)>, $1 := X.
ECA Rule rv7_eca ACTION_ADD<rResultTmp(@X, QID, Ret, RID, Buf)> :- EVENT_RECV<pReturn(@X, NQID, VID, Prov)>, rResultTmp(@X, QID, Ret, RID, Buf1), NQID == f_sha1((+ QID)+ VID), Buf2 := f_append(Prov), Buf := f_concat(Buf1, Buf2).
ECA Rule rv8Eca0Ins ACTION_LOCAL_SEND<eRReturn(@X, QID)> :- EVENT_INSERT<rResultTmp(@X, QID, Ret, RID, Buf)>, rQList(@X, QID, List), f_size(Buf) == f_size(List).
ECA Rule rv8Eca1Ins ACTION_LOCAL_SEND<eRReturn(@X, QID)> :- EVENT_INSERT<rQList(@X, QID, List)>, rResultTmp(@X, QID, Ret, RID, Buf), f_size(Buf) == f_size(List).
ECA Rule rv9_eca ACTION_REMOTE_SEND<rReturn(@Ret, QID, RID, Prov)> :- EVENT_RECV<eRReturn(@X, QID)>, rResultTmp(@X, QID, Ret, RID, Buf), ruleExec(@X, RID, RWeight, R, List), Prov := f_pRULE(Buf, X, R, RWeight).
